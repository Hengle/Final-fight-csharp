// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCToBS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GCToBS {

  /// <summary>Holder for reflection information generated from GCToBS.proto</summary>
  public static partial class GCToBSReflection {

    #region Descriptor
    /// <summary>File descriptor for GCToBS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GCToBSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxHQ1RvQlMucHJvdG8SBkdDVG9CUyJfCg5Bc2tHYXRlQWRkcmVzcxIeCgZt",
            "c2dudW0YASABKA4yDi5HQ1RvQlMuTXNnTnVtEgwKBHBsYXQYAiABKAUSEAoI",
            "dXNlcm5hbWUYAyABKAkSDQoFdG9rZW4YBCABKAkigwEKDk9uZUNsaW5ldExv",
            "Z2luEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9CUy5Nc2dOdW0SCwoDdWluGAIg",
            "ASgJEhEKCXNlc3Npb25pZBgDIAEoCRIMCgRwbGF0GAQgASgNEhUKDWxvZ2lu",
            "X3N1Y2Nlc3MYBSABKA0SDAoEbnNpZBgGIAEoDSqUAQoGTXNnTnVtEgoKBnVu",
            "a25vdxAAEhoKFGVNc2dUb0JTRnJvbUdDX0JlZ2luEICAAhIjCh1lTXNnVG9C",
            "U0Zyb21HQ19Bc2tHYXRlQWRkcmVzcxCBgAISIwodZU1zZ1RvQlNGcm9tR0Nf",
            "T25lQ2xpbmV0TG9naW4QgoACEhgKEmVNc2dUb0JTRnJvbUdDX0VuZBDogQJi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GCToBS.MsgNum), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToBS.AskGateAddress), global::GCToBS.AskGateAddress.Parser, new[]{ "Msgnum", "Plat", "Username", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToBS.OneClinetLogin), global::GCToBS.OneClinetLogin.Parser, new[]{ "Msgnum", "Uin", "Sessionid", "Plat", "LoginSuccess", "Nsid" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgNum {
    [pbr::OriginalName("unknow")] Unknow = 0,
    [pbr::OriginalName("eMsgToBSFromGC_Begin")] EMsgToBsfromGcBegin = 32768,
    [pbr::OriginalName("eMsgToBSFromGC_AskGateAddress")] EMsgToBsfromGcAskGateAddress = 32769,
    [pbr::OriginalName("eMsgToBSFromGC_OneClinetLogin")] EMsgToBsfromGcOneClinetLogin = 32770,
    [pbr::OriginalName("eMsgToBSFromGC_End")] EMsgToBsfromGcEnd = 33000,
  }

  #endregion

  #region Messages
  /// <summary>
  ///已换GameAskGateAddress
  ///eMsgToBSFromGC_AskGateAddress
  /// </summary>
  public sealed partial class AskGateAddress : pb::IMessage<AskGateAddress> {
    private static readonly pb::MessageParser<AskGateAddress> _parser = new pb::MessageParser<AskGateAddress>(() => new AskGateAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskGateAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToBS.GCToBSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGateAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGateAddress(AskGateAddress other) : this() {
      msgnum_ = other.msgnum_;
      plat_ = other.plat_;
      username_ = other.username_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGateAddress Clone() {
      return new AskGateAddress(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToBS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToBS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "plat" field.</summary>
    public const int PlatFieldNumber = 2;
    private int plat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Plat {
      get { return plat_; }
      set {
        plat_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 4;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskGateAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskGateAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Plat != other.Plat) return false;
      if (Username != other.Username) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Plat != 0) hash ^= Plat.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Plat != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Plat);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Plat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Plat);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskGateAddress other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Plat != 0) {
        Plat = other.Plat;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToBS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Plat = input.ReadInt32();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OneClinetLogin : pb::IMessage<OneClinetLogin> {
    private static readonly pb::MessageParser<OneClinetLogin> _parser = new pb::MessageParser<OneClinetLogin>(() => new OneClinetLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OneClinetLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToBS.GCToBSReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneClinetLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneClinetLogin(OneClinetLogin other) : this() {
      msgnum_ = other.msgnum_;
      uin_ = other.uin_;
      sessionid_ = other.sessionid_;
      plat_ = other.plat_;
      loginSuccess_ = other.loginSuccess_;
      nsid_ = other.nsid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneClinetLogin Clone() {
      return new OneClinetLogin(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToBS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToBS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "uin" field.</summary>
    public const int UinFieldNumber = 2;
    private string uin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uin {
      get { return uin_; }
      set {
        uin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 3;
    private string sessionid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sessionid {
      get { return sessionid_; }
      set {
        sessionid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plat" field.</summary>
    public const int PlatFieldNumber = 4;
    private uint plat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Plat {
      get { return plat_; }
      set {
        plat_ = value;
      }
    }

    /// <summary>Field number for the "login_success" field.</summary>
    public const int LoginSuccessFieldNumber = 5;
    private uint loginSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LoginSuccess {
      get { return loginSuccess_; }
      set {
        loginSuccess_ = value;
      }
    }

    /// <summary>Field number for the "nsid" field.</summary>
    public const int NsidFieldNumber = 6;
    private uint nsid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Nsid {
      get { return nsid_; }
      set {
        nsid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OneClinetLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OneClinetLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Uin != other.Uin) return false;
      if (Sessionid != other.Sessionid) return false;
      if (Plat != other.Plat) return false;
      if (LoginSuccess != other.LoginSuccess) return false;
      if (Nsid != other.Nsid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Uin.Length != 0) hash ^= Uin.GetHashCode();
      if (Sessionid.Length != 0) hash ^= Sessionid.GetHashCode();
      if (Plat != 0) hash ^= Plat.GetHashCode();
      if (LoginSuccess != 0) hash ^= LoginSuccess.GetHashCode();
      if (Nsid != 0) hash ^= Nsid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Uin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uin);
      }
      if (Sessionid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sessionid);
      }
      if (Plat != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Plat);
      }
      if (LoginSuccess != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LoginSuccess);
      }
      if (Nsid != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Nsid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Uin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uin);
      }
      if (Sessionid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sessionid);
      }
      if (Plat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Plat);
      }
      if (LoginSuccess != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoginSuccess);
      }
      if (Nsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nsid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OneClinetLogin other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Uin.Length != 0) {
        Uin = other.Uin;
      }
      if (other.Sessionid.Length != 0) {
        Sessionid = other.Sessionid;
      }
      if (other.Plat != 0) {
        Plat = other.Plat;
      }
      if (other.LoginSuccess != 0) {
        LoginSuccess = other.LoginSuccess;
      }
      if (other.Nsid != 0) {
        Nsid = other.Nsid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToBS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Uin = input.ReadString();
            break;
          }
          case 26: {
            Sessionid = input.ReadString();
            break;
          }
          case 32: {
            Plat = input.ReadUInt32();
            break;
          }
          case 40: {
            LoginSuccess = input.ReadUInt32();
            break;
          }
          case 48: {
            Nsid = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
