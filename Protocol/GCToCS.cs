// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCToCS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GCToCS {

  /// <summary>Holder for reflection information generated from GCToCS.proto</summary>
  public static partial class GCToCSReflection {

    #region Descriptor
    /// <summary>File descriptor for GCToCS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GCToCSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxHQ1RvQ1MucHJvdG8SBkdDVG9DUyJGChFBc2tPbmVUYXNrUmV3YXJkcxIe",
            "CgZtc2dudW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVtEhEKCXRhc2tfZ3VpZBgC",
            "IAEoDSI4CgZDREtSZXESHgoGbXNnbnVtGAEgASgOMg4uR0NUb0NTLk1zZ051",
            "bRIOCgZjZGtzdHIYAiABKAkiiQEKC0N1cnRVSUV2ZW50Eh4KBm1zZ251bRgB",
            "IAEoDjIOLkdDVG9DUy5Nc2dOdW0SLgoJZXZlbnRsaXN0GAIgAygLMhsuR0NU",
            "b0NTLkN1cnRVSUV2ZW50LlVJRXZlbnQaKgoHVUlFdmVudBINCgV1aWlkeBgC",
            "IAEoDRIQCghldmVudE51bRgDIAEoDSJgCg1Bc2tSZWNvaW5SdW5lEh4KBm1z",
            "Z251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SDwoHcnVuZV9pZBgCIAEoDRIQ",
            "CghwYXlfdHlwZRgDIAEoDRIMCgRjb3N0GAQgASgNIjUKE0JsYWNrTGlzdE9u",
            "bGluZUluZm8SHgoGbXNnbnVtGAEgASgOMg4uR0NUb0NTLk1zZ051bSI7CgpB",
            "ZGRDU0dNQ21kEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SDQoF",
            "Z21jbWQYAiABKAkibAoYTm90aWZ5T25lTWF0Y2hOZWVkT25lUmV0Eh4KBm1z",
            "Z251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SDQoFbWFwaWQYAiABKA0SDwoH",
            "ZmlnaHRpZBgDIAEoDRIQCghpc0FjY2VwdBgEIAEoCCJIChFBc2tDaGFuZ2Vo",
            "ZWFkZXJJZBIeCgZtc2dudW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVtEhMKC25l",
            "d2hlYWRlcmlkGAIgASgNIkUKDkNoYW5nZU5pY2tOYW1lEh4KBm1zZ251bRgB",
            "IAEoDjIOLkdDVG9DUy5Nc2dOdW0SEwoLbmV3bmlja25hbWUYAiABKAkiVgoS",
            "QXNrQ3JlYXRlTWF0Y2hUZWFtEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5N",
            "c2dOdW0SEQoJbWF0Y2h0eXBlGAIgASgNEg0KBW1hcGlkGAMgASgNIkoKD0Fz",
            "a0FkZE1hdGNoVGVhbRIeCgZtc2dudW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVt",
            "EhcKD2ZyaWVuZHNOaWNrTmFtZRgCIAEoCSI0ChJBc2tSZW1vdmVNYXRjaFRl",
            "YW0SHgoGbXNnbnVtGAEgASgOMg4uR0NUb0NTLk1zZ051bSJRChZBc2tJbnZp",
            "dGVKb2luTWF0Y2hUZWFtEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dO",
            "dW0SFwoPZnJpZW5kc05pY2tOYW1lGAIgASgJIi8KDUFza1N0YXJ0TWF0Y2gS",
            "HgoGbXNnbnVtGAEgASgOMg4uR0NUb0NTLk1zZ051bSIuCgxBc2tTdG9wTWF0",
            "Y2gSHgoGbXNnbnVtGAEgASgOMg4uR0NUb0NTLk1zZ051bSI2ChRSZXF1ZXN0",
            "TWF0Y2hUZWFtTGlzdBIeCgZtc2dudW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVt",
            "Ii0KC0Fza0dvb2RzY2ZnEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dO",
            "dW0iuwEKFkFza0NTQ3JlYXRlR3VpZGVCYXR0bGUSHgoGbXNnbnVtGAEgASgO",
            "Mg4uR0NUb0NTLk1zZ051bRINCgVtYXBpZBgCIAEoBRI3CgVudHlwZRgDIAEo",
            "DjIoLkdDVG9DUy5Bc2tDU0NyZWF0ZUd1aWRlQmF0dGxlLmd1aWRldHlwZSI5",
            "CglndWlkZXR5cGUSCgoGdW5rbm93EAASCQoFZmlyc3QQARIKCgZzZWNvbmQQ",
            "AhIJCgVvdGhlchADIj8KDkFza1F1aWNrQmF0dGxlEh4KBm1zZ251bRgBIAEo",
            "DjIOLkdDVG9DUy5Nc2dOdW0SDQoFbWFwaWQYAiABKAUiNAoSQXNrU3RvcFF1",
            "aWNrQmF0dGxlEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0iTgoN",
            "QXNrQ3JlYXRlUm9vbRIeCgZtc2dudW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVt",
            "Eg0KBW1hcGlkGAIgASgFEg4KBnBhc3N3ZBgDIAEoCSJOCgpBc2tBZGRSb29t",
            "Eh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SEAoIYmF0dGxlaWQY",
            "AiABKAQSDgoGcGFzc3dkGAMgASgJIi4KDEFza0xlYXZlUm9vbRIeCgZtc2du",
            "dW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVtIkMKEUFza0NoYW5nZVJvb21TZWF0",
            "Eh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SDgoGbmV3cG9zGAIg",
            "ASgFIi4KDEFza1JlYWR5Um9vbRIeCgZtc2dudW0YASABKA4yDi5HQ1RvQ1Mu",
            "TXNnTnVtIi8KDUFza0NhbmNlbFJvb20SHgoGbXNnbnVtGAEgASgOMg4uR0NU",
            "b0NTLk1zZ051bSIuCgxBc2tTdGFydFJvb20SHgoGbXNnbnVtGAEgASgOMg4u",
            "R0NUb0NTLk1zZ051bSIwCg5Bc2tSZUVudGVyUm9vbRIeCgZtc2dudW0YASAB",
            "KA4yDi5HQ1RvQ1MuTXNnTnVtIj0KDUFza0NoYXRJblJvb20SHgoGbXNnbnVt",
            "GAEgASgOMg4uR0NUb0NTLk1zZ051bRIMCgRjaGF0GAIgASgJIkAKDkFza0dl",
            "dE1haWxHaWZ0Eh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SDgoG",
            "bWFpbElkGAIgASgFIj0KC0Fza01haWxJbmZvEh4KBm1zZ251bRgBIAEoDjIO",
            "LkdDVG9DUy5Nc2dOdW0SDgoGbWFpbElkGAIgASgFImUKC0Fza0J1eUdvb2Rz",
            "Eh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SFAoMY29tbW9uZGl0",
            "eWlkGAIgASgFEhMKC2NvbnN1bWV0eXBlGAMgASgFEgsKA251bRgEIAEoDSI0",
            "ChJVc2VyQXNrR2V0Q0xSZXdhcmQSHgoGbXNnbnVtGAEgASgOMg4uR0NUb0NT",
            "Lk1zZ051bSJbCgZOb3RpY2USHgoGbXNnbnVtGAEgASgOMg4uR0NUb0NTLk1z",
            "Z051bRIhCgR0eXBlGAIgASgOMhMuR0NUb0NTLm5vdGljZV90eXBlEg4KBm5v",
            "dGljZRgDIAEoCSJSCg1Bc2tDdXJ0Tm90aWNlEh4KBm1zZ251bRgBIAEoDjIO",
            "LkdDVG9DUy5Nc2dOdW0SIQoEdHlwZRgCIAEoDjITLkdDVG9DUy5ub3RpY2Vf",
            "dHlwZSJdCgxDb21wbGV0ZUluZm8SHgoGbXNnbnVtGAEgASgOMg4uR0NUb0NT",
            "Lk1zZ051bRIQCghuaWNrbmFtZRgCIAEoCRIOCgZoZWFkaWQYAyABKAUSCwoD",
            "c2V4GAQgASgFIlEKD0Fza0FkZFRvU05TTGlzdBIeCgZtc2dudW0YASABKA4y",
            "Di5HQ1RvQ1MuTXNnTnVtEhAKCG5pY2tuYW1lGAIgASgJEgwKBHR5cGUYAyAB",
            "KAUiNQoTQXNrQ2FuSW52aXRlRnJpZW5kcxIeCgZtc2dudW0YASABKA4yDi5H",
            "Q1RvQ1MuTXNnTnVtIlMKE0Fza0FkZFRvU05TTGlzdEJ5SUQSHgoGbXNnbnVt",
            "GAEgASgOMg4uR0NUb0NTLk1zZ051bRIOCgZ1c2VyaWQYAiABKAQSDAoEdHlw",
            "ZRgDIAEoBSJVChRBc2tSZW1vdmVGcm9tU05TTGlzdBIeCgZtc2dudW0YASAB",
            "KA4yDi5HQ1RvQ1MuTXNnTnVtEg8KB2d1aWRpZHgYAiABKAQSDAoEdHlwZRgD",
            "IAEoBSJVChBBc2tTZW5kTXNnVG9Vc2VyEh4KBm1zZ251bRgBIAEoDjIOLkdD",
            "VG9DUy5Nc2dOdW0SDwoHZ3VpZGlkeBgCIAEoBBIQCghjb250ZW50cxgDIAEo",
            "CSJdChhBc2tJbnZpdGVGcmllbmRzVG9CYXR0bGUSHgoGbXNnbnVtGAEgASgO",
            "Mg4uR0NUb0NTLk1zZ051bRIQCghiYXR0bGVpZBgCIAEoBRIPCgdndWlkaWR4",
            "GAMgASgEIkoKFkFza1F1ZXJ5VXNlckJ5Tmlja05hbWUSHgoGbXNnbnVtGAEg",
            "ASgOMg4uR0NUb0NTLk1zZ051bRIQCghuaWNrbmFtZRgCIAEoCSJYChZHQ1Jl",
            "cGx5QWRkRnJpZW5kUmVxdXN0Eh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5N",
            "c2dOdW0SDwoHZ3VpZGlkeBgCIAEoBBINCgVyZXBseRgDIAEoBSJTCg9HdWlk",
            "ZUNTU3RlcENvbXASHgoGbXNnbnVtGAEgASgOMg4uR0NUb0NTLk1zZ051bRIR",
            "CglndWlkZXBhcnQYAiABKAUSDQoFYmNvbXAYAyABKAgiSQoVR0NSZXBseUlu",
            "dml0ZVRvQmF0dGxlEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0S",
            "EAoIbmlja25hbWUYAiABKAkiiwEKBUxvZ2luEh4KBm1zZ251bRgBIAEoDjIO",
            "LkdDVG9DUy5Nc2dOdW0SCwoDc2RrGAIgASgFEhAKCHBsYXRmb3JtGAMgASgF",
            "EgwKBG5hbWUYBCABKAkSDgoGcGFzc3dkGAUgASgJEhEKCWlwYWRkcmVzcxgG",
            "IAEoCRISCgplcXVpbWVudGlkGAcgASgJIi4KDFVzZXJHYW1lSW5mbxIeCgZt",
            "c2dudW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVtIjoKCEJ1eVJ1bmVzEh4KBm1z",
            "Z251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SDgoGdHlwZWlkGAIgASgFIkoK",
            "CUV1aXBSdW5lcxIeCgZtc2dudW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVtEg4K",
            "BnJ1bmVpZBgCIAEoDRINCgV0b3BvcxgDIAEoBSJICgtVbkV1aXBSdW5lcxIe",
            "CgZtc2dudW0YASABKA4yDi5HQ1RvQ1MuTXNnTnVtEgwKBHBhZ2UYAiABKAUS",
            "CwoDcG9zGAMgASgFIj8KDENvbXBvc2VSdW5lcxIeCgZtc2dudW0YASABKA4y",
            "Di5HQ1RvQ1MuTXNnTnVtEg8KB3J1bmVzaWQYAiADKA0iTwoPUmVjb25uZWN0",
            "VG9HYW1lEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9DUy5Nc2dOdW0SDAoEbmFt",
            "ZRgCIAEoCRIOCgZwYXNzd2QYAyABKAkiWwoOQ29tR3VpZGVTdGVwSUQSHgoG",
            "bXNnbnVtGAEgASgOMg4uR0NUb0NTLk1zZ051bRIMCgR0eXBlGAIgASgFEgwK",
            "BHN0ZXAYAyABKAUSDQoFc3RhdGUYBCABKAUiLQoLQXNrUm9vbUxpc3QSHgoG",
            "bXNnbnVtGAEgASgOMg4uR0NUb0NTLk1zZ051bSqPEgoGTXNnTnVtEgoKBnVu",
            "a25vdxAAEh0KGGVNc2dUb0dTVG9DU0Zyb21HQ19CZWdpbhD/PxIgChtlTXNn",
            "VG9HU1RvQ1NGcm9tR0NfQXNrTG9naW4QgUASKAojZU1zZ1RvR1NUb0NTRnJv",
            "bUdDX0Fza1JlY29ubmVjdEdhbWUQgkASKgolZU1zZ1RvR1NUb0NTRnJvbUdD",
            "X0Fza0NvbWxldGVVc2VySW5mbxCDQBInCiJlTXNnVG9HU1RvQ1NGcm9tR0Nf",
            "QXNrVXNlckdhbWVJbmZvEIRAEioKJWVNc2dUb0dTVG9DU0Zyb21HQ19Vc2Vy",
            "QXNrR2V0Q0xSZXdhcmQQhUASHgoZZU1zZ1RvR1NUb0NTRnJvbUdDX05vdGlj",
            "ZRCIQBIlCiBlTXNnVG9HU1RvQ1NGcm9tR0NfQXNrQ3VydE5vdGljZRCJQBIn",
            "CiJlTXNnVG9HU1RvQ1NGcm9tR0NfQXNrQWRkVG9TTlNMaXN0EJJAEiwKJ2VN",
            "c2dUb0dTVG9DU0Zyb21HQ19Bc2tSZW1vdmVGcm9tU05TTGlzdBCTQBIoCiNl",
            "TXNnVG9HU1RvQ1NGcm9tR0NfQXNrU2VuZE1zZ1RvVXNlchCUQBIwCitlTXNn",
            "VG9HU1RvQ1NGcm9tR0NfQXNrSW52aXRlRnJpZW5kc1RvQmF0dGxlEJVAEi4K",
            "KWVNc2dUb0dTVG9DU0Zyb21HQ19Bc2tRdWVyeVVzZXJCeU5pY2tOYW1lEJZA",
            "Ei4KKWVNc2dUb0dTVG9DU0Zyb21HQ19HQ1JlcGx5QWRkRnJpZW5kUmVxdXN0",
            "EJdAEi0KKGVNc2dUb0dTVG9DU0Zyb21HQ19HQ1JlcGx5SW52aXRlVG9CYXR0",
            "bGUQmEASKwomZU1zZ1RvR1NUb0NTRnJvbUdDX0Fza0FkZFRvU05TTGlzdEJ5",
            "SUQQmUASKwomZU1zZ1RvR1NUb0NTRnJvbUdDX0Fza0Nhbkludml0ZUZyaWVu",
            "ZHMQmkASLgopZU1zZ1RvR1NUb0NTRnJvbUdDX0Fza0JsYWNrTGlzdE9ubGlu",
            "ZUluZm8QtkISIAobZU1zZ1RvR1NUb0NTRnJvbUdDX0JVWVJ1bmVzEJxAEiEK",
            "HGVNc2dUb0dTVG9DU0Zyb21HQ19FdWlwUnVuZXMQnUASIwoeZU1zZ1RvR1NU",
            "b0NTRnJvbUdDX1VubG9hZFJ1bmVzEJ5AEiQKH2VNc2dUb0dTVG9DU0Zyb21H",
            "Q19Db21wb3NlUnVuZXMQn0ASIwoeZU1zZ1RvR1NUb0NTRnJvbUdDX0Fza0J1",
            "eUdvb2RzEKBAEiUKIGVNc2dUb0dTVG9DU0Zyb21HQ19Bc2tSZWNvaW5SdW5l",
            "ELdCEiMKHmVNc2dUb0dTVG9DU0Zyb21HQ19Bc2tNYWlsSW5mbxCmQBImCiFl",
            "TXNnVG9HU1RvQ1NGcm9tR0NfQXNrR2V0TWFpbEdpZnQQp0ASJgohZU1zZ1Rv",
            "R1NUb0NTRnJvbUdDX0Fza0d1aWRlQmF0dGxlELBAEiYKIWVNc2dUb0dTVG9D",
            "U0Zyb21HQ19Bc2tHdWlkZVN0ZXBJZBCxQBIpCiRlTXNnVG9HU1RvQ1NGcm9t",
            "R0NfQ29tcENTR3VpZGVTdGVwSWQQskASJgohZU1zZ1RvR1NUb0NTRnJvbUdD",
            "X0Fza1F1aWNrQmF0dGxlELpAEioKJWVNc2dUb0dTVG9DU0Zyb21HQ19Bc2tT",
            "dG9wUXVpY2tCYXR0bGUQu0ASJQogZU1zZ1RvR1NUb0NTRnJvbUdDX0Fza0Ny",
            "ZWF0ZVJvb20QxEASIgodZU1zZ1RvR1NUb0NTRnJvbUdDX0Fza0FkZFJvb20Q",
            "xUASJAofZU1zZ1RvR1NUb0NTRnJvbUdDX0Fza0xlYXZlUm9vbRDGQBIpCiRl",
            "TXNnVG9HU1RvQ1NGcm9tR0NfQXNrQ2hhbmdlUm9vbVNlYXQQx0ASJAofZU1z",
            "Z1RvR1NUb0NTRnJvbUdDX0Fza1JlYWR5Um9vbRDIQBIlCiBlTXNnVG9HU1Rv",
            "Q1NGcm9tR0NfQXNrQ2FuY2VsUm9vbRDJQBIkCh9lTXNnVG9HU1RvQ1NGcm9t",
            "R0NfQXNrU3RhcnRSb29tEMpAEiUKIGVNc2dUb0dTVG9DU0Zyb21HQ19Bc2tD",
            "aGF0SW5Sb29tEMtAEiYKIWVNc2dUb0dTVG9DU0Zyb21HQ19Bc2tSZUVudGVy",
            "Um9vbRDMQBIjCh5lTXNnVG9HU1RvQ1NGcm9tR0NfQXNrUm9vbUxpc3QQzUAS",
            "IwoeZU1zZ1RvR1NUb0NTRnJvbUdDX0Fza0dvb2RzY2ZnEM5AEioKJWVNc2dU",
            "b0dTVG9DU0Zyb21HQ19Bc2tDcmVhdGVNYXRjaFRlYW0Q2EASJwoiZU1zZ1Rv",
            "R1NUb0NTRnJvbUdDX0Fza0FkZE1hdGNoVGVhbRDZQBIqCiVlTXNnVG9HU1Rv",
            "Q1NGcm9tR0NfQXNrUmVtb3ZlTWF0Y2hUZWFtENpAEi4KKWVNc2dUb0dTVG9D",
            "U0Zyb21HQ19Bc2tJbnZpdGVKb2luTWF0Y2hUZWFtENtAEiUKIGVNc2dUb0dT",
            "VG9DU0Zyb21HQ19Bc2tTdGFydE1hdGNoENxAEiQKH2VNc2dUb0dTVG9DU0Zy",
            "b21HQ19Bc2tTdG9wTWF0Y2gQ3UASKQokZU1zZ1RvR1NUb0NTRnJvbUdDX0Fz",
            "a0NoYW5nZU5pY2tOYW1lEN5AEiwKJ2VNc2dUb0dTVG9DU0Zyb21HQ19SZXF1",
            "ZXN0TWF0Y2hUZWFtTGlzdBDfQBIwCitlTXNnVG9HU1RvQ1NGcm9tR0NfTm90",
            "aWZ5T25lTWF0Y2hOZWVkT25lUmV0EOBAEikKJGVNc2dUb0dTVG9DU0Zyb21H",
            "Q19Bc2tPbmVUYXNrUmV3YXJkcxDiQBIpCiRlTXNnVG9HU1RvQ1NGcm9tR0Nf",
            "QXNrQ2hhbmdlaGVhZGVySWQQtEISHgoZZU1zZ1RvR1NUb0NTRnJvbUdDX0NE",
            "S1JlcRC5QhIdChhlTXNnVG9HU1RvQ1NGcm9tR0NfR21DbWQQtUISHwoaZU1z",
            "Z1RvR1NUb0NTRnJvbUdDX1VJRXZlbnQQ5kISGwoWZU1zZ1RvR1NUb0NTRnJv",
            "bUdDX0VuZBCoRipACgtub3RpY2VfdHlwZRINCgl0eXBlX25vbmUQABIKCgZ0",
            "eXBlXzEQARIKCgZ0eXBlXzIQAhIKCgZ0eXBlXzMQA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GCToCS.MsgNum), typeof(global::GCToCS.notice_type), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskOneTaskRewards), global::GCToCS.AskOneTaskRewards.Parser, new[]{ "Msgnum", "TaskGuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.CDKReq), global::GCToCS.CDKReq.Parser, new[]{ "Msgnum", "Cdkstr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.CurtUIEvent), global::GCToCS.CurtUIEvent.Parser, new[]{ "Msgnum", "Eventlist" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.CurtUIEvent.Types.UIEvent), global::GCToCS.CurtUIEvent.Types.UIEvent.Parser, new[]{ "Uiidx", "EventNum" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskRecoinRune), global::GCToCS.AskRecoinRune.Parser, new[]{ "Msgnum", "RuneId", "PayType", "Cost" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.BlackListOnlineInfo), global::GCToCS.BlackListOnlineInfo.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AddCSGMCmd), global::GCToCS.AddCSGMCmd.Parser, new[]{ "Msgnum", "Gmcmd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.NotifyOneMatchNeedOneRet), global::GCToCS.NotifyOneMatchNeedOneRet.Parser, new[]{ "Msgnum", "Mapid", "Fightid", "IsAccept" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskChangeheaderId), global::GCToCS.AskChangeheaderId.Parser, new[]{ "Msgnum", "Newheaderid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.ChangeNickName), global::GCToCS.ChangeNickName.Parser, new[]{ "Msgnum", "Newnickname" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskCreateMatchTeam), global::GCToCS.AskCreateMatchTeam.Parser, new[]{ "Msgnum", "Matchtype", "Mapid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskAddMatchTeam), global::GCToCS.AskAddMatchTeam.Parser, new[]{ "Msgnum", "FriendsNickName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskRemoveMatchTeam), global::GCToCS.AskRemoveMatchTeam.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskInviteJoinMatchTeam), global::GCToCS.AskInviteJoinMatchTeam.Parser, new[]{ "Msgnum", "FriendsNickName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskStartMatch), global::GCToCS.AskStartMatch.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskStopMatch), global::GCToCS.AskStopMatch.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.RequestMatchTeamList), global::GCToCS.RequestMatchTeamList.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskGoodscfg), global::GCToCS.AskGoodscfg.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskCSCreateGuideBattle), global::GCToCS.AskCSCreateGuideBattle.Parser, new[]{ "Msgnum", "Mapid", "Ntype" }, null, new[]{ typeof(global::GCToCS.AskCSCreateGuideBattle.Types.guidetype) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskQuickBattle), global::GCToCS.AskQuickBattle.Parser, new[]{ "Msgnum", "Mapid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskStopQuickBattle), global::GCToCS.AskStopQuickBattle.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskCreateRoom), global::GCToCS.AskCreateRoom.Parser, new[]{ "Msgnum", "Mapid", "Passwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskAddRoom), global::GCToCS.AskAddRoom.Parser, new[]{ "Msgnum", "Battleid", "Passwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskLeaveRoom), global::GCToCS.AskLeaveRoom.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskChangeRoomSeat), global::GCToCS.AskChangeRoomSeat.Parser, new[]{ "Msgnum", "Newpos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskReadyRoom), global::GCToCS.AskReadyRoom.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskCancelRoom), global::GCToCS.AskCancelRoom.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskStartRoom), global::GCToCS.AskStartRoom.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskReEnterRoom), global::GCToCS.AskReEnterRoom.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskChatInRoom), global::GCToCS.AskChatInRoom.Parser, new[]{ "Msgnum", "Chat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskGetMailGift), global::GCToCS.AskGetMailGift.Parser, new[]{ "Msgnum", "MailId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskMailInfo), global::GCToCS.AskMailInfo.Parser, new[]{ "Msgnum", "MailId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskBuyGoods), global::GCToCS.AskBuyGoods.Parser, new[]{ "Msgnum", "Commondityid", "Consumetype", "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.UserAskGetCLReward), global::GCToCS.UserAskGetCLReward.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.Notice), global::GCToCS.Notice.Parser, new[]{ "Msgnum", "Type", "Notice_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskCurtNotice), global::GCToCS.AskCurtNotice.Parser, new[]{ "Msgnum", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.CompleteInfo), global::GCToCS.CompleteInfo.Parser, new[]{ "Msgnum", "Nickname", "Headid", "Sex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskAddToSNSList), global::GCToCS.AskAddToSNSList.Parser, new[]{ "Msgnum", "Nickname", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskCanInviteFriends), global::GCToCS.AskCanInviteFriends.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskAddToSNSListByID), global::GCToCS.AskAddToSNSListByID.Parser, new[]{ "Msgnum", "Userid", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskRemoveFromSNSList), global::GCToCS.AskRemoveFromSNSList.Parser, new[]{ "Msgnum", "Guididx", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskSendMsgToUser), global::GCToCS.AskSendMsgToUser.Parser, new[]{ "Msgnum", "Guididx", "Contents" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskInviteFriendsToBattle), global::GCToCS.AskInviteFriendsToBattle.Parser, new[]{ "Msgnum", "Battleid", "Guididx" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskQueryUserByNickName), global::GCToCS.AskQueryUserByNickName.Parser, new[]{ "Msgnum", "Nickname" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.GCReplyAddFriendRequst), global::GCToCS.GCReplyAddFriendRequst.Parser, new[]{ "Msgnum", "Guididx", "Reply" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.GuideCSStepComp), global::GCToCS.GuideCSStepComp.Parser, new[]{ "Msgnum", "Guidepart", "Bcomp" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.GCReplyInviteToBattle), global::GCToCS.GCReplyInviteToBattle.Parser, new[]{ "Msgnum", "Nickname" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.Login), global::GCToCS.Login.Parser, new[]{ "Msgnum", "Sdk", "Platform", "Name", "Passwd", "Ipaddress", "Equimentid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.UserGameInfo), global::GCToCS.UserGameInfo.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.BuyRunes), global::GCToCS.BuyRunes.Parser, new[]{ "Msgnum", "Typeid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.EuipRunes), global::GCToCS.EuipRunes.Parser, new[]{ "Msgnum", "Runeid", "Topos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.UnEuipRunes), global::GCToCS.UnEuipRunes.Parser, new[]{ "Msgnum", "Page", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.ComposeRunes), global::GCToCS.ComposeRunes.Parser, new[]{ "Msgnum", "Runesid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.ReconnectToGame), global::GCToCS.ReconnectToGame.Parser, new[]{ "Msgnum", "Name", "Passwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.ComGuideStepID), global::GCToCS.ComGuideStepID.Parser, new[]{ "Msgnum", "Type", "Step", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToCS.AskRoomList), global::GCToCS.AskRoomList.Parser, new[]{ "Msgnum" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgNum {
    [pbr::OriginalName("unknow")] Unknow = 0,
    [pbr::OriginalName("eMsgToGSToCSFromGC_Begin")] EMsgToGstoCsfromGcBegin = 8191,
    /// <summary>
    ///��½�ǳ������콱
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskLogin")] EMsgToGstoCsfromGcAskLogin = 8193,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskReconnectGame")] EMsgToGstoCsfromGcAskReconnectGame = 8194,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskComleteUserInfo")] EMsgToGstoCsfromGcAskComleteUserInfo = 8195,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskUserGameInfo")] EMsgToGstoCsfromGcAskUserGameInfo = 8196,
    [pbr::OriginalName("eMsgToGSToCSFromGC_UserAskGetCLReward")] EMsgToGstoCsfromGcUserAskGetClreward = 8197,
    /// <summary>
    ///�������
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_Notice")] EMsgToGstoCsfromGcNotice = 8200,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskCurtNotice")] EMsgToGstoCsfromGcAskCurtNotice = 8201,
    /// <summary>
    ///����ϵͳ
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskAddToSNSList")] EMsgToGstoCsfromGcAskAddToSnslist = 8210,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskRemoveFromSNSList")] EMsgToGstoCsfromGcAskRemoveFromSnslist = 8211,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskSendMsgToUser")] EMsgToGstoCsfromGcAskSendMsgToUser = 8212,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskInviteFriendsToBattle")] EMsgToGstoCsfromGcAskInviteFriendsToBattle = 8213,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskQueryUserByNickName")] EMsgToGstoCsfromGcAskQueryUserByNickName = 8214,
    [pbr::OriginalName("eMsgToGSToCSFromGC_GCReplyAddFriendRequst")] EMsgToGstoCsfromGcGcreplyAddFriendRequst = 8215,
    [pbr::OriginalName("eMsgToGSToCSFromGC_GCReplyInviteToBattle")] EMsgToGstoCsfromGcGcreplyInviteToBattle = 8216,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskAddToSNSListByID")] EMsgToGstoCsfromGcAskAddToSnslistById = 8217,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskCanInviteFriends")] EMsgToGstoCsfromGcAskCanInviteFriends = 8218,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskBlackListOnlineInfo")] EMsgToGstoCsfromGcAskBlackListOnlineInfo = 8502,
    /// <summary>
    ///���߷���ϵͳ
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_BUYRunes")] EMsgToGstoCsfromGcBuyrunes = 8220,
    [pbr::OriginalName("eMsgToGSToCSFromGC_EuipRunes")] EMsgToGstoCsfromGcEuipRunes = 8221,
    [pbr::OriginalName("eMsgToGSToCSFromGC_UnloadRunes")] EMsgToGstoCsfromGcUnloadRunes = 8222,
    [pbr::OriginalName("eMsgToGSToCSFromGC_ComposeRunes")] EMsgToGstoCsfromGcComposeRunes = 8223,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskBuyGoods")] EMsgToGstoCsfromGcAskBuyGoods = 8224,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskRecoinRune")] EMsgToGstoCsfromGcAskRecoinRune = 8503,
    /// <summary>
    ///�ʼ�ϵͳ
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskMailInfo")] EMsgToGstoCsfromGcAskMailInfo = 8230,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskGetMailGift")] EMsgToGstoCsfromGcAskGetMailGift = 8231,
    /// <summary>
    ///����������Ϣ
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskGuideBattle")] EMsgToGstoCsfromGcAskGuideBattle = 8240,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskGuideStepId")] EMsgToGstoCsfromGcAskGuideStepId = 8241,
    [pbr::OriginalName("eMsgToGSToCSFromGC_CompCSGuideStepId")] EMsgToGstoCsfromGcCompCsguideStepId = 8242,
    /// <summary>
    ///����ƥ����Ϣ
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskQuickBattle")] EMsgToGstoCsfromGcAskQuickBattle = 8250,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskStopQuickBattle")] EMsgToGstoCsfromGcAskStopQuickBattle = 8251,
    /// <summary>
    ///���������Ϣ
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskCreateRoom")] EMsgToGstoCsfromGcAskCreateRoom = 8260,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskAddRoom")] EMsgToGstoCsfromGcAskAddRoom = 8261,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskLeaveRoom")] EMsgToGstoCsfromGcAskLeaveRoom = 8262,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskChangeRoomSeat")] EMsgToGstoCsfromGcAskChangeRoomSeat = 8263,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskReadyRoom")] EMsgToGstoCsfromGcAskReadyRoom = 8264,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskCancelRoom")] EMsgToGstoCsfromGcAskCancelRoom = 8265,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskStartRoom")] EMsgToGstoCsfromGcAskStartRoom = 8266,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskChatInRoom")] EMsgToGstoCsfromGcAskChatInRoom = 8267,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskReEnterRoom")] EMsgToGstoCsfromGcAskReEnterRoom = 8268,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskRoomList")] EMsgToGstoCsfromGcAskRoomList = 8269,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskGoodscfg")] EMsgToGstoCsfromGcAskGoodscfg = 8270,
    /// <summary>
    ///ƥ�������Ϣ
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskCreateMatchTeam")] EMsgToGstoCsfromGcAskCreateMatchTeam = 8280,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskAddMatchTeam")] EMsgToGstoCsfromGcAskAddMatchTeam = 8281,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskRemoveMatchTeam")] EMsgToGstoCsfromGcAskRemoveMatchTeam = 8282,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskInviteJoinMatchTeam")] EMsgToGstoCsfromGcAskInviteJoinMatchTeam = 8283,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskStartMatch")] EMsgToGstoCsfromGcAskStartMatch = 8284,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskStopMatch")] EMsgToGstoCsfromGcAskStopMatch = 8285,
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskChangeNickName")] EMsgToGstoCsfromGcAskChangeNickName = 8286,
    [pbr::OriginalName("eMsgToGSToCSFromGC_RequestMatchTeamList")] EMsgToGstoCsfromGcRequestMatchTeamList = 8287,
    [pbr::OriginalName("eMsgToGSToCSFromGC_NotifyOneMatchNeedOneRet")] EMsgToGstoCsfromGcNotifyOneMatchNeedOneRet = 8288,
    /// <summary>
    ///����ϵͳ
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskOneTaskRewards")] EMsgToGstoCsfromGcAskOneTaskRewards = 8290,
    /// <summary>
    ///�����Ӱ˵������(��Ҫ��Ⱦ������)
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_AskChangeheaderId")] EMsgToGstoCsfromGcAskChangeheaderId = 8500,
    [pbr::OriginalName("eMsgToGSToCSFromGC_CDKReq")] EMsgToGstoCsfromGcCdkreq = 8505,
    /// <summary>
    ///cs gm cmd
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_GmCmd")] EMsgToGstoCsfromGcGmCmd = 8501,
    /// <summary>
    ///log 8550-8560
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_UIEvent")] EMsgToGstoCsfromGcUievent = 8550,
    /// <summary>
    ///������
    /// </summary>
    [pbr::OriginalName("eMsgToGSToCSFromGC_End")] EMsgToGstoCsfromGcEnd = 9000,
  }

  public enum notice_type {
    [pbr::OriginalName("type_none")] TypeNone = 0,
    [pbr::OriginalName("type_1")] Type1 = 1,
    [pbr::OriginalName("type_2")] Type2 = 2,
    [pbr::OriginalName("type_3")] Type3 = 3,
  }

  #endregion

  #region Messages
  public sealed partial class AskOneTaskRewards : pb::IMessage<AskOneTaskRewards> {
    private static readonly pb::MessageParser<AskOneTaskRewards> _parser = new pb::MessageParser<AskOneTaskRewards>(() => new AskOneTaskRewards());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskOneTaskRewards> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskOneTaskRewards() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskOneTaskRewards(AskOneTaskRewards other) : this() {
      msgnum_ = other.msgnum_;
      taskGuid_ = other.taskGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskOneTaskRewards Clone() {
      return new AskOneTaskRewards(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "task_guid" field.</summary>
    public const int TaskGuidFieldNumber = 2;
    private uint taskGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TaskGuid {
      get { return taskGuid_; }
      set {
        taskGuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskOneTaskRewards);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskOneTaskRewards other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (TaskGuid != other.TaskGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (TaskGuid != 0) hash ^= TaskGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (TaskGuid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TaskGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (TaskGuid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TaskGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskOneTaskRewards other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.TaskGuid != 0) {
        TaskGuid = other.TaskGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            TaskGuid = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CDKReq : pb::IMessage<CDKReq> {
    private static readonly pb::MessageParser<CDKReq> _parser = new pb::MessageParser<CDKReq>(() => new CDKReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CDKReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDKReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDKReq(CDKReq other) : this() {
      msgnum_ = other.msgnum_;
      cdkstr_ = other.cdkstr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CDKReq Clone() {
      return new CDKReq(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "cdkstr" field.</summary>
    public const int CdkstrFieldNumber = 2;
    private string cdkstr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cdkstr {
      get { return cdkstr_; }
      set {
        cdkstr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CDKReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CDKReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Cdkstr != other.Cdkstr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Cdkstr.Length != 0) hash ^= Cdkstr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Cdkstr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cdkstr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Cdkstr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cdkstr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CDKReq other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Cdkstr.Length != 0) {
        Cdkstr = other.Cdkstr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Cdkstr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_UIEvent
  /// </summary>
  public sealed partial class CurtUIEvent : pb::IMessage<CurtUIEvent> {
    private static readonly pb::MessageParser<CurtUIEvent> _parser = new pb::MessageParser<CurtUIEvent>(() => new CurtUIEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurtUIEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtUIEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtUIEvent(CurtUIEvent other) : this() {
      msgnum_ = other.msgnum_;
      eventlist_ = other.eventlist_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurtUIEvent Clone() {
      return new CurtUIEvent(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "eventlist" field.</summary>
    public const int EventlistFieldNumber = 2;
    private static readonly pb::FieldCodec<global::GCToCS.CurtUIEvent.Types.UIEvent> _repeated_eventlist_codec
        = pb::FieldCodec.ForMessage(18, global::GCToCS.CurtUIEvent.Types.UIEvent.Parser);
    private readonly pbc::RepeatedField<global::GCToCS.CurtUIEvent.Types.UIEvent> eventlist_ = new pbc::RepeatedField<global::GCToCS.CurtUIEvent.Types.UIEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GCToCS.CurtUIEvent.Types.UIEvent> Eventlist {
      get { return eventlist_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurtUIEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurtUIEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if(!eventlist_.Equals(other.eventlist_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      hash ^= eventlist_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      eventlist_.WriteTo(output, _repeated_eventlist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      size += eventlist_.CalculateSize(_repeated_eventlist_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurtUIEvent other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      eventlist_.Add(other.eventlist_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            eventlist_.AddEntriesFrom(input, _repeated_eventlist_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CurtUIEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class UIEvent : pb::IMessage<UIEvent> {
        private static readonly pb::MessageParser<UIEvent> _parser = new pb::MessageParser<UIEvent>(() => new UIEvent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UIEvent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GCToCS.CurtUIEvent.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UIEvent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UIEvent(UIEvent other) : this() {
          uiidx_ = other.uiidx_;
          eventNum_ = other.eventNum_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UIEvent Clone() {
          return new UIEvent(this);
        }

        /// <summary>Field number for the "uiidx" field.</summary>
        public const int UiidxFieldNumber = 2;
        private uint uiidx_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Uiidx {
          get { return uiidx_; }
          set {
            uiidx_ = value;
          }
        }

        /// <summary>Field number for the "eventNum" field.</summary>
        public const int EventNumFieldNumber = 3;
        private uint eventNum_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint EventNum {
          get { return eventNum_; }
          set {
            eventNum_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UIEvent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UIEvent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Uiidx != other.Uiidx) return false;
          if (EventNum != other.EventNum) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Uiidx != 0) hash ^= Uiidx.GetHashCode();
          if (EventNum != 0) hash ^= EventNum.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Uiidx != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Uiidx);
          }
          if (EventNum != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(EventNum);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Uiidx != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Uiidx);
          }
          if (EventNum != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventNum);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UIEvent other) {
          if (other == null) {
            return;
          }
          if (other.Uiidx != 0) {
            Uiidx = other.Uiidx;
          }
          if (other.EventNum != 0) {
            EventNum = other.EventNum;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 16: {
                Uiidx = input.ReadUInt32();
                break;
              }
              case 24: {
                EventNum = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AskRecoinRune : pb::IMessage<AskRecoinRune> {
    private static readonly pb::MessageParser<AskRecoinRune> _parser = new pb::MessageParser<AskRecoinRune>(() => new AskRecoinRune());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskRecoinRune> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRecoinRune() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRecoinRune(AskRecoinRune other) : this() {
      msgnum_ = other.msgnum_;
      runeId_ = other.runeId_;
      payType_ = other.payType_;
      cost_ = other.cost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRecoinRune Clone() {
      return new AskRecoinRune(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "rune_id" field.</summary>
    public const int RuneIdFieldNumber = 2;
    private uint runeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RuneId {
      get { return runeId_; }
      set {
        runeId_ = value;
      }
    }

    /// <summary>Field number for the "pay_type" field.</summary>
    public const int PayTypeFieldNumber = 3;
    private uint payType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PayType {
      get { return payType_; }
      set {
        payType_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 4;
    private uint cost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskRecoinRune);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskRecoinRune other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (RuneId != other.RuneId) return false;
      if (PayType != other.PayType) return false;
      if (Cost != other.Cost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (RuneId != 0) hash ^= RuneId.GetHashCode();
      if (PayType != 0) hash ^= PayType.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (RuneId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RuneId);
      }
      if (PayType != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PayType);
      }
      if (Cost != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Cost);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (RuneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RuneId);
      }
      if (PayType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PayType);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskRecoinRune other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.RuneId != 0) {
        RuneId = other.RuneId;
      }
      if (other.PayType != 0) {
        PayType = other.PayType;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            RuneId = input.ReadUInt32();
            break;
          }
          case 24: {
            PayType = input.ReadUInt32();
            break;
          }
          case 32: {
            Cost = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlackListOnlineInfo : pb::IMessage<BlackListOnlineInfo> {
    private static readonly pb::MessageParser<BlackListOnlineInfo> _parser = new pb::MessageParser<BlackListOnlineInfo>(() => new BlackListOnlineInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlackListOnlineInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlackListOnlineInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlackListOnlineInfo(BlackListOnlineInfo other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlackListOnlineInfo Clone() {
      return new BlackListOnlineInfo(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlackListOnlineInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlackListOnlineInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlackListOnlineInfo other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_GmCmd
  /// </summary>
  public sealed partial class AddCSGMCmd : pb::IMessage<AddCSGMCmd> {
    private static readonly pb::MessageParser<AddCSGMCmd> _parser = new pb::MessageParser<AddCSGMCmd>(() => new AddCSGMCmd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddCSGMCmd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCSGMCmd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCSGMCmd(AddCSGMCmd other) : this() {
      msgnum_ = other.msgnum_;
      gmcmd_ = other.gmcmd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddCSGMCmd Clone() {
      return new AddCSGMCmd(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "gmcmd" field.</summary>
    public const int GmcmdFieldNumber = 2;
    private string gmcmd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gmcmd {
      get { return gmcmd_; }
      set {
        gmcmd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddCSGMCmd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddCSGMCmd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Gmcmd != other.Gmcmd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Gmcmd.Length != 0) hash ^= Gmcmd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Gmcmd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gmcmd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Gmcmd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gmcmd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddCSGMCmd other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Gmcmd.Length != 0) {
        Gmcmd = other.Gmcmd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Gmcmd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotifyOneMatchNeedOneRet : pb::IMessage<NotifyOneMatchNeedOneRet> {
    private static readonly pb::MessageParser<NotifyOneMatchNeedOneRet> _parser = new pb::MessageParser<NotifyOneMatchNeedOneRet>(() => new NotifyOneMatchNeedOneRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyOneMatchNeedOneRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyOneMatchNeedOneRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyOneMatchNeedOneRet(NotifyOneMatchNeedOneRet other) : this() {
      msgnum_ = other.msgnum_;
      mapid_ = other.mapid_;
      fightid_ = other.fightid_;
      isAccept_ = other.isAccept_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyOneMatchNeedOneRet Clone() {
      return new NotifyOneMatchNeedOneRet(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "mapid" field.</summary>
    public const int MapidFieldNumber = 2;
    private uint mapid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Mapid {
      get { return mapid_; }
      set {
        mapid_ = value;
      }
    }

    /// <summary>Field number for the "fightid" field.</summary>
    public const int FightidFieldNumber = 3;
    private uint fightid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Fightid {
      get { return fightid_; }
      set {
        fightid_ = value;
      }
    }

    /// <summary>Field number for the "isAccept" field.</summary>
    public const int IsAcceptFieldNumber = 4;
    private bool isAccept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAccept {
      get { return isAccept_; }
      set {
        isAccept_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyOneMatchNeedOneRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyOneMatchNeedOneRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Mapid != other.Mapid) return false;
      if (Fightid != other.Fightid) return false;
      if (IsAccept != other.IsAccept) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Mapid != 0) hash ^= Mapid.GetHashCode();
      if (Fightid != 0) hash ^= Fightid.GetHashCode();
      if (IsAccept != false) hash ^= IsAccept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Mapid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Mapid);
      }
      if (Fightid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Fightid);
      }
      if (IsAccept != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsAccept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Mapid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mapid);
      }
      if (Fightid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fightid);
      }
      if (IsAccept != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyOneMatchNeedOneRet other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Mapid != 0) {
        Mapid = other.Mapid;
      }
      if (other.Fightid != 0) {
        Fightid = other.Fightid;
      }
      if (other.IsAccept != false) {
        IsAccept = other.IsAccept;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Mapid = input.ReadUInt32();
            break;
          }
          case 24: {
            Fightid = input.ReadUInt32();
            break;
          }
          case 32: {
            IsAccept = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskChangeheaderId : pb::IMessage<AskChangeheaderId> {
    private static readonly pb::MessageParser<AskChangeheaderId> _parser = new pb::MessageParser<AskChangeheaderId>(() => new AskChangeheaderId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskChangeheaderId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChangeheaderId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChangeheaderId(AskChangeheaderId other) : this() {
      msgnum_ = other.msgnum_;
      newheaderid_ = other.newheaderid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChangeheaderId Clone() {
      return new AskChangeheaderId(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "newheaderid" field.</summary>
    public const int NewheaderidFieldNumber = 2;
    private uint newheaderid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Newheaderid {
      get { return newheaderid_; }
      set {
        newheaderid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskChangeheaderId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskChangeheaderId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Newheaderid != other.Newheaderid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Newheaderid != 0) hash ^= Newheaderid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Newheaderid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Newheaderid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Newheaderid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Newheaderid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskChangeheaderId other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Newheaderid != 0) {
        Newheaderid = other.Newheaderid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Newheaderid = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_AskChangeNickName
  /// </summary>
  public sealed partial class ChangeNickName : pb::IMessage<ChangeNickName> {
    private static readonly pb::MessageParser<ChangeNickName> _parser = new pb::MessageParser<ChangeNickName>(() => new ChangeNickName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeNickName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNickName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNickName(ChangeNickName other) : this() {
      msgnum_ = other.msgnum_;
      newnickname_ = other.newnickname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeNickName Clone() {
      return new ChangeNickName(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "newnickname" field.</summary>
    public const int NewnicknameFieldNumber = 2;
    private string newnickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Newnickname {
      get { return newnickname_; }
      set {
        newnickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeNickName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeNickName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Newnickname != other.Newnickname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Newnickname.Length != 0) hash ^= Newnickname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Newnickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Newnickname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Newnickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Newnickname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeNickName other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Newnickname.Length != 0) {
        Newnickname = other.Newnickname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Newnickname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskCreateMatchTeam : pb::IMessage<AskCreateMatchTeam> {
    private static readonly pb::MessageParser<AskCreateMatchTeam> _parser = new pb::MessageParser<AskCreateMatchTeam>(() => new AskCreateMatchTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskCreateMatchTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCreateMatchTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCreateMatchTeam(AskCreateMatchTeam other) : this() {
      msgnum_ = other.msgnum_;
      matchtype_ = other.matchtype_;
      mapid_ = other.mapid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCreateMatchTeam Clone() {
      return new AskCreateMatchTeam(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "matchtype" field.</summary>
    public const int MatchtypeFieldNumber = 2;
    private uint matchtype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Matchtype {
      get { return matchtype_; }
      set {
        matchtype_ = value;
      }
    }

    /// <summary>Field number for the "mapid" field.</summary>
    public const int MapidFieldNumber = 3;
    private uint mapid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Mapid {
      get { return mapid_; }
      set {
        mapid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskCreateMatchTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskCreateMatchTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Matchtype != other.Matchtype) return false;
      if (Mapid != other.Mapid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Matchtype != 0) hash ^= Matchtype.GetHashCode();
      if (Mapid != 0) hash ^= Mapid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Matchtype != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Matchtype);
      }
      if (Mapid != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Mapid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Matchtype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Matchtype);
      }
      if (Mapid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mapid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskCreateMatchTeam other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Matchtype != 0) {
        Matchtype = other.Matchtype;
      }
      if (other.Mapid != 0) {
        Mapid = other.Mapid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Matchtype = input.ReadUInt32();
            break;
          }
          case 24: {
            Mapid = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskAddMatchTeam : pb::IMessage<AskAddMatchTeam> {
    private static readonly pb::MessageParser<AskAddMatchTeam> _parser = new pb::MessageParser<AskAddMatchTeam>(() => new AskAddMatchTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskAddMatchTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddMatchTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddMatchTeam(AskAddMatchTeam other) : this() {
      msgnum_ = other.msgnum_;
      friendsNickName_ = other.friendsNickName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddMatchTeam Clone() {
      return new AskAddMatchTeam(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "friendsNickName" field.</summary>
    public const int FriendsNickNameFieldNumber = 2;
    private string friendsNickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendsNickName {
      get { return friendsNickName_; }
      set {
        friendsNickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskAddMatchTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskAddMatchTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (FriendsNickName != other.FriendsNickName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (FriendsNickName.Length != 0) hash ^= FriendsNickName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (FriendsNickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendsNickName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (FriendsNickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendsNickName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskAddMatchTeam other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.FriendsNickName.Length != 0) {
        FriendsNickName = other.FriendsNickName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            FriendsNickName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskRemoveMatchTeam : pb::IMessage<AskRemoveMatchTeam> {
    private static readonly pb::MessageParser<AskRemoveMatchTeam> _parser = new pb::MessageParser<AskRemoveMatchTeam>(() => new AskRemoveMatchTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskRemoveMatchTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRemoveMatchTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRemoveMatchTeam(AskRemoveMatchTeam other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRemoveMatchTeam Clone() {
      return new AskRemoveMatchTeam(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskRemoveMatchTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskRemoveMatchTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskRemoveMatchTeam other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskInviteJoinMatchTeam : pb::IMessage<AskInviteJoinMatchTeam> {
    private static readonly pb::MessageParser<AskInviteJoinMatchTeam> _parser = new pb::MessageParser<AskInviteJoinMatchTeam>(() => new AskInviteJoinMatchTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskInviteJoinMatchTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskInviteJoinMatchTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskInviteJoinMatchTeam(AskInviteJoinMatchTeam other) : this() {
      msgnum_ = other.msgnum_;
      friendsNickName_ = other.friendsNickName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskInviteJoinMatchTeam Clone() {
      return new AskInviteJoinMatchTeam(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "friendsNickName" field.</summary>
    public const int FriendsNickNameFieldNumber = 2;
    private string friendsNickName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendsNickName {
      get { return friendsNickName_; }
      set {
        friendsNickName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskInviteJoinMatchTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskInviteJoinMatchTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (FriendsNickName != other.FriendsNickName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (FriendsNickName.Length != 0) hash ^= FriendsNickName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (FriendsNickName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendsNickName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (FriendsNickName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendsNickName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskInviteJoinMatchTeam other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.FriendsNickName.Length != 0) {
        FriendsNickName = other.FriendsNickName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            FriendsNickName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskStartMatch : pb::IMessage<AskStartMatch> {
    private static readonly pb::MessageParser<AskStartMatch> _parser = new pb::MessageParser<AskStartMatch>(() => new AskStartMatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskStartMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStartMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStartMatch(AskStartMatch other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStartMatch Clone() {
      return new AskStartMatch(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskStartMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskStartMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskStartMatch other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskStopMatch : pb::IMessage<AskStopMatch> {
    private static readonly pb::MessageParser<AskStopMatch> _parser = new pb::MessageParser<AskStopMatch>(() => new AskStopMatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskStopMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStopMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStopMatch(AskStopMatch other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStopMatch Clone() {
      return new AskStopMatch(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskStopMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskStopMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskStopMatch other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestMatchTeamList : pb::IMessage<RequestMatchTeamList> {
    private static readonly pb::MessageParser<RequestMatchTeamList> _parser = new pb::MessageParser<RequestMatchTeamList>(() => new RequestMatchTeamList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestMatchTeamList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMatchTeamList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMatchTeamList(RequestMatchTeamList other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestMatchTeamList Clone() {
      return new RequestMatchTeamList(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestMatchTeamList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestMatchTeamList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestMatchTeamList other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class AskGoodscfg : pb::IMessage<AskGoodscfg> {
    private static readonly pb::MessageParser<AskGoodscfg> _parser = new pb::MessageParser<AskGoodscfg>(() => new AskGoodscfg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskGoodscfg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGoodscfg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGoodscfg(AskGoodscfg other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGoodscfg Clone() {
      return new AskGoodscfg(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskGoodscfg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskGoodscfg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskGoodscfg other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskCSCreateGuideBattle : pb::IMessage<AskCSCreateGuideBattle> {
    private static readonly pb::MessageParser<AskCSCreateGuideBattle> _parser = new pb::MessageParser<AskCSCreateGuideBattle>(() => new AskCSCreateGuideBattle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskCSCreateGuideBattle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCSCreateGuideBattle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCSCreateGuideBattle(AskCSCreateGuideBattle other) : this() {
      msgnum_ = other.msgnum_;
      mapid_ = other.mapid_;
      ntype_ = other.ntype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCSCreateGuideBattle Clone() {
      return new AskCSCreateGuideBattle(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "mapid" field.</summary>
    public const int MapidFieldNumber = 2;
    private int mapid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mapid {
      get { return mapid_; }
      set {
        mapid_ = value;
      }
    }

    /// <summary>Field number for the "ntype" field.</summary>
    public const int NtypeFieldNumber = 3;
    private global::GCToCS.AskCSCreateGuideBattle.Types.guidetype ntype_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.AskCSCreateGuideBattle.Types.guidetype Ntype {
      get { return ntype_; }
      set {
        ntype_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskCSCreateGuideBattle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskCSCreateGuideBattle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Mapid != other.Mapid) return false;
      if (Ntype != other.Ntype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Mapid != 0) hash ^= Mapid.GetHashCode();
      if (Ntype != 0) hash ^= Ntype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Mapid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mapid);
      }
      if (Ntype != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Ntype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Mapid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mapid);
      }
      if (Ntype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ntype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskCSCreateGuideBattle other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Mapid != 0) {
        Mapid = other.Mapid;
      }
      if (other.Ntype != 0) {
        Ntype = other.Ntype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Mapid = input.ReadInt32();
            break;
          }
          case 24: {
            ntype_ = (global::GCToCS.AskCSCreateGuideBattle.Types.guidetype) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AskCSCreateGuideBattle message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum guidetype {
        [pbr::OriginalName("unknow")] Unknow = 0,
        [pbr::OriginalName("first")] First = 1,
        [pbr::OriginalName("second")] Second = 2,
        [pbr::OriginalName("other")] Other = 3,
      }

    }
    #endregion

  }

  public sealed partial class AskQuickBattle : pb::IMessage<AskQuickBattle> {
    private static readonly pb::MessageParser<AskQuickBattle> _parser = new pb::MessageParser<AskQuickBattle>(() => new AskQuickBattle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskQuickBattle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQuickBattle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQuickBattle(AskQuickBattle other) : this() {
      msgnum_ = other.msgnum_;
      mapid_ = other.mapid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQuickBattle Clone() {
      return new AskQuickBattle(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "mapid" field.</summary>
    public const int MapidFieldNumber = 2;
    private int mapid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mapid {
      get { return mapid_; }
      set {
        mapid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskQuickBattle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskQuickBattle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Mapid != other.Mapid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Mapid != 0) hash ^= Mapid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Mapid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mapid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Mapid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mapid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskQuickBattle other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Mapid != 0) {
        Mapid = other.Mapid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Mapid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskStopQuickBattle : pb::IMessage<AskStopQuickBattle> {
    private static readonly pb::MessageParser<AskStopQuickBattle> _parser = new pb::MessageParser<AskStopQuickBattle>(() => new AskStopQuickBattle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskStopQuickBattle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStopQuickBattle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStopQuickBattle(AskStopQuickBattle other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStopQuickBattle Clone() {
      return new AskStopQuickBattle(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskStopQuickBattle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskStopQuickBattle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskStopQuickBattle other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskCreateRoom : pb::IMessage<AskCreateRoom> {
    private static readonly pb::MessageParser<AskCreateRoom> _parser = new pb::MessageParser<AskCreateRoom>(() => new AskCreateRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskCreateRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCreateRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCreateRoom(AskCreateRoom other) : this() {
      msgnum_ = other.msgnum_;
      mapid_ = other.mapid_;
      passwd_ = other.passwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCreateRoom Clone() {
      return new AskCreateRoom(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "mapid" field.</summary>
    public const int MapidFieldNumber = 2;
    private int mapid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mapid {
      get { return mapid_; }
      set {
        mapid_ = value;
      }
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 3;
    private string passwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskCreateRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskCreateRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Mapid != other.Mapid) return false;
      if (Passwd != other.Passwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Mapid != 0) hash ^= Mapid.GetHashCode();
      if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Mapid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Mapid);
      }
      if (Passwd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Mapid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mapid);
      }
      if (Passwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskCreateRoom other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Mapid != 0) {
        Mapid = other.Mapid;
      }
      if (other.Passwd.Length != 0) {
        Passwd = other.Passwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Mapid = input.ReadInt32();
            break;
          }
          case 26: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskAddRoom : pb::IMessage<AskAddRoom> {
    private static readonly pb::MessageParser<AskAddRoom> _parser = new pb::MessageParser<AskAddRoom>(() => new AskAddRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskAddRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddRoom(AskAddRoom other) : this() {
      msgnum_ = other.msgnum_;
      battleid_ = other.battleid_;
      passwd_ = other.passwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddRoom Clone() {
      return new AskAddRoom(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "battleid" field.</summary>
    public const int BattleidFieldNumber = 2;
    private ulong battleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Battleid {
      get { return battleid_; }
      set {
        battleid_ = value;
      }
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 3;
    private string passwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskAddRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskAddRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Battleid != other.Battleid) return false;
      if (Passwd != other.Passwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Battleid != 0UL) hash ^= Battleid.GetHashCode();
      if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Battleid != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Battleid);
      }
      if (Passwd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Battleid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Battleid);
      }
      if (Passwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskAddRoom other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Battleid != 0UL) {
        Battleid = other.Battleid;
      }
      if (other.Passwd.Length != 0) {
        Passwd = other.Passwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Battleid = input.ReadUInt64();
            break;
          }
          case 26: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskLeaveRoom : pb::IMessage<AskLeaveRoom> {
    private static readonly pb::MessageParser<AskLeaveRoom> _parser = new pb::MessageParser<AskLeaveRoom>(() => new AskLeaveRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskLeaveRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskLeaveRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskLeaveRoom(AskLeaveRoom other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskLeaveRoom Clone() {
      return new AskLeaveRoom(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskLeaveRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskLeaveRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskLeaveRoom other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskChangeRoomSeat : pb::IMessage<AskChangeRoomSeat> {
    private static readonly pb::MessageParser<AskChangeRoomSeat> _parser = new pb::MessageParser<AskChangeRoomSeat>(() => new AskChangeRoomSeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskChangeRoomSeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChangeRoomSeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChangeRoomSeat(AskChangeRoomSeat other) : this() {
      msgnum_ = other.msgnum_;
      newpos_ = other.newpos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChangeRoomSeat Clone() {
      return new AskChangeRoomSeat(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "newpos" field.</summary>
    public const int NewposFieldNumber = 2;
    private int newpos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Newpos {
      get { return newpos_; }
      set {
        newpos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskChangeRoomSeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskChangeRoomSeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Newpos != other.Newpos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Newpos != 0) hash ^= Newpos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Newpos != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Newpos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Newpos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Newpos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskChangeRoomSeat other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Newpos != 0) {
        Newpos = other.Newpos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Newpos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskReadyRoom : pb::IMessage<AskReadyRoom> {
    private static readonly pb::MessageParser<AskReadyRoom> _parser = new pb::MessageParser<AskReadyRoom>(() => new AskReadyRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskReadyRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReadyRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReadyRoom(AskReadyRoom other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReadyRoom Clone() {
      return new AskReadyRoom(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskReadyRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskReadyRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskReadyRoom other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskCancelRoom : pb::IMessage<AskCancelRoom> {
    private static readonly pb::MessageParser<AskCancelRoom> _parser = new pb::MessageParser<AskCancelRoom>(() => new AskCancelRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskCancelRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCancelRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCancelRoom(AskCancelRoom other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCancelRoom Clone() {
      return new AskCancelRoom(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskCancelRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskCancelRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskCancelRoom other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskStartRoom : pb::IMessage<AskStartRoom> {
    private static readonly pb::MessageParser<AskStartRoom> _parser = new pb::MessageParser<AskStartRoom>(() => new AskStartRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskStartRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStartRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStartRoom(AskStartRoom other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskStartRoom Clone() {
      return new AskStartRoom(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskStartRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskStartRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskStartRoom other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskReEnterRoom : pb::IMessage<AskReEnterRoom> {
    private static readonly pb::MessageParser<AskReEnterRoom> _parser = new pb::MessageParser<AskReEnterRoom>(() => new AskReEnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskReEnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReEnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReEnterRoom(AskReEnterRoom other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReEnterRoom Clone() {
      return new AskReEnterRoom(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskReEnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskReEnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskReEnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskChatInRoom : pb::IMessage<AskChatInRoom> {
    private static readonly pb::MessageParser<AskChatInRoom> _parser = new pb::MessageParser<AskChatInRoom>(() => new AskChatInRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskChatInRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChatInRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChatInRoom(AskChatInRoom other) : this() {
      msgnum_ = other.msgnum_;
      chat_ = other.chat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskChatInRoom Clone() {
      return new AskChatInRoom(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "chat" field.</summary>
    public const int ChatFieldNumber = 2;
    private string chat_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Chat {
      get { return chat_; }
      set {
        chat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskChatInRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskChatInRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Chat != other.Chat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Chat.Length != 0) hash ^= Chat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Chat.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Chat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Chat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Chat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskChatInRoom other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Chat.Length != 0) {
        Chat = other.Chat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Chat = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_AskGetMailGift
  /// </summary>
  public sealed partial class AskGetMailGift : pb::IMessage<AskGetMailGift> {
    private static readonly pb::MessageParser<AskGetMailGift> _parser = new pb::MessageParser<AskGetMailGift>(() => new AskGetMailGift());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskGetMailGift> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGetMailGift() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGetMailGift(AskGetMailGift other) : this() {
      msgnum_ = other.msgnum_;
      mailId_ = other.mailId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGetMailGift Clone() {
      return new AskGetMailGift(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "mailId" field.</summary>
    public const int MailIdFieldNumber = 2;
    private int mailId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MailId {
      get { return mailId_; }
      set {
        mailId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskGetMailGift);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskGetMailGift other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (MailId != other.MailId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (MailId != 0) hash ^= MailId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (MailId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MailId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (MailId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskGetMailGift other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.MailId != 0) {
        MailId = other.MailId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            MailId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_AskMailInfo
  /// </summary>
  public sealed partial class AskMailInfo : pb::IMessage<AskMailInfo> {
    private static readonly pb::MessageParser<AskMailInfo> _parser = new pb::MessageParser<AskMailInfo>(() => new AskMailInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskMailInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskMailInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskMailInfo(AskMailInfo other) : this() {
      msgnum_ = other.msgnum_;
      mailId_ = other.mailId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskMailInfo Clone() {
      return new AskMailInfo(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "mailId" field.</summary>
    public const int MailIdFieldNumber = 2;
    private int mailId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MailId {
      get { return mailId_; }
      set {
        mailId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskMailInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskMailInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (MailId != other.MailId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (MailId != 0) hash ^= MailId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (MailId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MailId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (MailId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MailId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskMailInfo other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.MailId != 0) {
        MailId = other.MailId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            MailId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskBuyGoods : pb::IMessage<AskBuyGoods> {
    private static readonly pb::MessageParser<AskBuyGoods> _parser = new pb::MessageParser<AskBuyGoods>(() => new AskBuyGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskBuyGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskBuyGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskBuyGoods(AskBuyGoods other) : this() {
      msgnum_ = other.msgnum_;
      commondityid_ = other.commondityid_;
      consumetype_ = other.consumetype_;
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskBuyGoods Clone() {
      return new AskBuyGoods(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "commondityid" field.</summary>
    public const int CommondityidFieldNumber = 2;
    private int commondityid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Commondityid {
      get { return commondityid_; }
      set {
        commondityid_ = value;
      }
    }

    /// <summary>Field number for the "consumetype" field.</summary>
    public const int ConsumetypeFieldNumber = 3;
    private int consumetype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Consumetype {
      get { return consumetype_; }
      set {
        consumetype_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 4;
    private uint num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskBuyGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskBuyGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Commondityid != other.Commondityid) return false;
      if (Consumetype != other.Consumetype) return false;
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Commondityid != 0) hash ^= Commondityid.GetHashCode();
      if (Consumetype != 0) hash ^= Consumetype.GetHashCode();
      if (Num != 0) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Commondityid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Commondityid);
      }
      if (Consumetype != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Consumetype);
      }
      if (Num != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Commondityid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Commondityid);
      }
      if (Consumetype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Consumetype);
      }
      if (Num != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskBuyGoods other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Commondityid != 0) {
        Commondityid = other.Commondityid;
      }
      if (other.Consumetype != 0) {
        Consumetype = other.Consumetype;
      }
      if (other.Num != 0) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Commondityid = input.ReadInt32();
            break;
          }
          case 24: {
            Consumetype = input.ReadInt32();
            break;
          }
          case 32: {
            Num = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_UserAskGetCLReward
  /// </summary>
  public sealed partial class UserAskGetCLReward : pb::IMessage<UserAskGetCLReward> {
    private static readonly pb::MessageParser<UserAskGetCLReward> _parser = new pb::MessageParser<UserAskGetCLReward>(() => new UserAskGetCLReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserAskGetCLReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAskGetCLReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAskGetCLReward(UserAskGetCLReward other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserAskGetCLReward Clone() {
      return new UserAskGetCLReward(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserAskGetCLReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserAskGetCLReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserAskGetCLReward other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_Notice
  /// </summary>
  public sealed partial class Notice : pb::IMessage<Notice> {
    private static readonly pb::MessageParser<Notice> _parser = new pb::MessageParser<Notice>(() => new Notice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notice(Notice other) : this() {
      msgnum_ = other.msgnum_;
      type_ = other.type_;
      notice_ = other.notice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notice Clone() {
      return new Notice(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::GCToCS.notice_type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.notice_type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "notice" field.</summary>
    public const int Notice_FieldNumber = 3;
    private string notice_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notice_ {
      get { return notice_; }
      set {
        notice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Type != other.Type) return false;
      if (Notice_ != other.Notice_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Notice_.Length != 0) hash ^= Notice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Notice_.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notice_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Notice_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notice_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notice other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Notice_.Length != 0) {
        Notice_ = other.Notice_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            type_ = (global::GCToCS.notice_type) input.ReadEnum();
            break;
          }
          case 26: {
            Notice_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskCurtNotice : pb::IMessage<AskCurtNotice> {
    private static readonly pb::MessageParser<AskCurtNotice> _parser = new pb::MessageParser<AskCurtNotice>(() => new AskCurtNotice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskCurtNotice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCurtNotice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCurtNotice(AskCurtNotice other) : this() {
      msgnum_ = other.msgnum_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCurtNotice Clone() {
      return new AskCurtNotice(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::GCToCS.notice_type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.notice_type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskCurtNotice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskCurtNotice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskCurtNotice other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            type_ = (global::GCToCS.notice_type) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�GameCompleteBaseInfo
  ///eMsgToGSToCSFromGC_AskComleteUserInfo
  /// </summary>
  public sealed partial class CompleteInfo : pb::IMessage<CompleteInfo> {
    private static readonly pb::MessageParser<CompleteInfo> _parser = new pb::MessageParser<CompleteInfo>(() => new CompleteInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompleteInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteInfo(CompleteInfo other) : this() {
      msgnum_ = other.msgnum_;
      nickname_ = other.nickname_;
      headid_ = other.headid_;
      sex_ = other.sex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteInfo Clone() {
      return new CompleteInfo(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headid" field.</summary>
    public const int HeadidFieldNumber = 3;
    private int headid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Headid {
      get { return headid_; }
      set {
        headid_ = value;
      }
    }

    /// <summary>Field number for the "sex" field.</summary>
    public const int SexFieldNumber = 4;
    private int sex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sex {
      get { return sex_; }
      set {
        sex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompleteInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompleteInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Nickname != other.Nickname) return false;
      if (Headid != other.Headid) return false;
      if (Sex != other.Sex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Headid != 0) hash ^= Headid.GetHashCode();
      if (Sex != 0) hash ^= Sex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (Headid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Headid);
      }
      if (Sex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Sex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Headid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Headid);
      }
      if (Sex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompleteInfo other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Headid != 0) {
        Headid = other.Headid;
      }
      if (other.Sex != 0) {
        Sex = other.Sex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 24: {
            Headid = input.ReadInt32();
            break;
          }
          case 32: {
            Sex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�EmsgTocs_AskAddToFriendList
  ///Э������һ��eMsgToGSToCSFromGC_AskAddToFriendList->ToGSToCSFromGC_AskAddToSNSList
  /// </summary>
  public sealed partial class AskAddToSNSList : pb::IMessage<AskAddToSNSList> {
    private static readonly pb::MessageParser<AskAddToSNSList> _parser = new pb::MessageParser<AskAddToSNSList>(() => new AskAddToSNSList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskAddToSNSList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddToSNSList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddToSNSList(AskAddToSNSList other) : this() {
      msgnum_ = other.msgnum_;
      nickname_ = other.nickname_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddToSNSList Clone() {
      return new AskAddToSNSList(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskAddToSNSList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskAddToSNSList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Nickname != other.Nickname) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskAddToSNSList other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_AskCanInviteFriends
  /// </summary>
  public sealed partial class AskCanInviteFriends : pb::IMessage<AskCanInviteFriends> {
    private static readonly pb::MessageParser<AskCanInviteFriends> _parser = new pb::MessageParser<AskCanInviteFriends>(() => new AskCanInviteFriends());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskCanInviteFriends> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCanInviteFriends() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCanInviteFriends(AskCanInviteFriends other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskCanInviteFriends Clone() {
      return new AskCanInviteFriends(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskCanInviteFriends);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskCanInviteFriends other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskCanInviteFriends other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToCSFromGC_AskAddToSNSListByID
  /// </summary>
  public sealed partial class AskAddToSNSListByID : pb::IMessage<AskAddToSNSListByID> {
    private static readonly pb::MessageParser<AskAddToSNSListByID> _parser = new pb::MessageParser<AskAddToSNSListByID>(() => new AskAddToSNSListByID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskAddToSNSListByID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddToSNSListByID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddToSNSListByID(AskAddToSNSListByID other) : this() {
      msgnum_ = other.msgnum_;
      userid_ = other.userid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskAddToSNSListByID Clone() {
      return new AskAddToSNSListByID(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private ulong userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskAddToSNSListByID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskAddToSNSListByID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Userid != other.Userid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Userid != 0UL) hash ^= Userid.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Userid != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Userid);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Userid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Userid);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskAddToSNSListByID other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Userid != 0UL) {
        Userid = other.Userid;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Userid = input.ReadUInt64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�EmsgTocs_AskRemoveFromFriendList
  ///Э������һ��eMsgToGSToCSFromGC_AskRemoveFromFriendList->eMsgToGSToCSFromGC_AskRemoveFromSNSList
  /// </summary>
  public sealed partial class AskRemoveFromSNSList : pb::IMessage<AskRemoveFromSNSList> {
    private static readonly pb::MessageParser<AskRemoveFromSNSList> _parser = new pb::MessageParser<AskRemoveFromSNSList>(() => new AskRemoveFromSNSList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskRemoveFromSNSList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRemoveFromSNSList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRemoveFromSNSList(AskRemoveFromSNSList other) : this() {
      msgnum_ = other.msgnum_;
      guididx_ = other.guididx_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRemoveFromSNSList Clone() {
      return new AskRemoveFromSNSList(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "guididx" field.</summary>
    public const int GuididxFieldNumber = 2;
    private ulong guididx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Guididx {
      get { return guididx_; }
      set {
        guididx_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskRemoveFromSNSList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskRemoveFromSNSList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Guididx != other.Guididx) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Guididx != 0UL) hash ^= Guididx.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Guididx != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Guididx);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Guididx != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guididx);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskRemoveFromSNSList other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Guididx != 0UL) {
        Guididx = other.Guididx;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Guididx = input.ReadUInt64();
            break;
          }
          case 24: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�EmsgTocs_AskSendMsgToUser
  ///eMsgToGSToCSFromGC_AskSendMsgToUser
  /// </summary>
  public sealed partial class AskSendMsgToUser : pb::IMessage<AskSendMsgToUser> {
    private static readonly pb::MessageParser<AskSendMsgToUser> _parser = new pb::MessageParser<AskSendMsgToUser>(() => new AskSendMsgToUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskSendMsgToUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskSendMsgToUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskSendMsgToUser(AskSendMsgToUser other) : this() {
      msgnum_ = other.msgnum_;
      guididx_ = other.guididx_;
      contents_ = other.contents_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskSendMsgToUser Clone() {
      return new AskSendMsgToUser(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "guididx" field.</summary>
    public const int GuididxFieldNumber = 2;
    private ulong guididx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Guididx {
      get { return guididx_; }
      set {
        guididx_ = value;
      }
    }

    /// <summary>Field number for the "contents" field.</summary>
    public const int ContentsFieldNumber = 3;
    private string contents_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Contents {
      get { return contents_; }
      set {
        contents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskSendMsgToUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskSendMsgToUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Guididx != other.Guididx) return false;
      if (Contents != other.Contents) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Guididx != 0UL) hash ^= Guididx.GetHashCode();
      if (Contents.Length != 0) hash ^= Contents.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Guididx != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Guididx);
      }
      if (Contents.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Contents);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Guididx != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guididx);
      }
      if (Contents.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Contents);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskSendMsgToUser other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Guididx != 0UL) {
        Guididx = other.Guididx;
      }
      if (other.Contents.Length != 0) {
        Contents = other.Contents;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Guididx = input.ReadUInt64();
            break;
          }
          case 26: {
            Contents = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�EmsgTocs_AskInviteFriendsToBattle
  ///eMsgToGSToCSFromGC_AskInviteFriendsToBattle
  /// </summary>
  public sealed partial class AskInviteFriendsToBattle : pb::IMessage<AskInviteFriendsToBattle> {
    private static readonly pb::MessageParser<AskInviteFriendsToBattle> _parser = new pb::MessageParser<AskInviteFriendsToBattle>(() => new AskInviteFriendsToBattle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskInviteFriendsToBattle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskInviteFriendsToBattle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskInviteFriendsToBattle(AskInviteFriendsToBattle other) : this() {
      msgnum_ = other.msgnum_;
      battleid_ = other.battleid_;
      guididx_ = other.guididx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskInviteFriendsToBattle Clone() {
      return new AskInviteFriendsToBattle(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "battleid" field.</summary>
    public const int BattleidFieldNumber = 2;
    private int battleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Battleid {
      get { return battleid_; }
      set {
        battleid_ = value;
      }
    }

    /// <summary>Field number for the "guididx" field.</summary>
    public const int GuididxFieldNumber = 3;
    private ulong guididx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Guididx {
      get { return guididx_; }
      set {
        guididx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskInviteFriendsToBattle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskInviteFriendsToBattle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Battleid != other.Battleid) return false;
      if (Guididx != other.Guididx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Battleid != 0) hash ^= Battleid.GetHashCode();
      if (Guididx != 0UL) hash ^= Guididx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Battleid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Battleid);
      }
      if (Guididx != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Guididx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Battleid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Battleid);
      }
      if (Guididx != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guididx);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskInviteFriendsToBattle other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Battleid != 0) {
        Battleid = other.Battleid;
      }
      if (other.Guididx != 0UL) {
        Guididx = other.Guididx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Battleid = input.ReadInt32();
            break;
          }
          case 24: {
            Guididx = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�EmsgTocs_FindFriendPlayer
  ///Э������һ��eMsgToGSToCSFromGC_AskSendFriendPersonInfo->eMsgToGSToCSFromGC_AskQueryUserByNickName
  /// </summary>
  public sealed partial class AskQueryUserByNickName : pb::IMessage<AskQueryUserByNickName> {
    private static readonly pb::MessageParser<AskQueryUserByNickName> _parser = new pb::MessageParser<AskQueryUserByNickName>(() => new AskQueryUserByNickName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskQueryUserByNickName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQueryUserByNickName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQueryUserByNickName(AskQueryUserByNickName other) : this() {
      msgnum_ = other.msgnum_;
      nickname_ = other.nickname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQueryUserByNickName Clone() {
      return new AskQueryUserByNickName(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskQueryUserByNickName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskQueryUserByNickName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Nickname != other.Nickname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskQueryUserByNickName other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�EmsgTocs__GCReplyAddFriendRequst
  ///eMsgToGSToCSFromGC_GCReplyAddFriendRequst
  /// </summary>
  public sealed partial class GCReplyAddFriendRequst : pb::IMessage<GCReplyAddFriendRequst> {
    private static readonly pb::MessageParser<GCReplyAddFriendRequst> _parser = new pb::MessageParser<GCReplyAddFriendRequst>(() => new GCReplyAddFriendRequst());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GCReplyAddFriendRequst> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCReplyAddFriendRequst() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCReplyAddFriendRequst(GCReplyAddFriendRequst other) : this() {
      msgnum_ = other.msgnum_;
      guididx_ = other.guididx_;
      reply_ = other.reply_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCReplyAddFriendRequst Clone() {
      return new GCReplyAddFriendRequst(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "guididx" field.</summary>
    public const int GuididxFieldNumber = 2;
    private ulong guididx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Guididx {
      get { return guididx_; }
      set {
        guididx_ = value;
      }
    }

    /// <summary>Field number for the "reply" field.</summary>
    public const int ReplyFieldNumber = 3;
    private int reply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Reply {
      get { return reply_; }
      set {
        reply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GCReplyAddFriendRequst);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GCReplyAddFriendRequst other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Guididx != other.Guididx) return false;
      if (Reply != other.Reply) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Guididx != 0UL) hash ^= Guididx.GetHashCode();
      if (Reply != 0) hash ^= Reply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Guididx != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Guididx);
      }
      if (Reply != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Reply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Guididx != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guididx);
      }
      if (Reply != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GCReplyAddFriendRequst other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Guididx != 0UL) {
        Guididx = other.Guididx;
      }
      if (other.Reply != 0) {
        Reply = other.Reply;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Guididx = input.ReadUInt64();
            break;
          }
          case 24: {
            Reply = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�EmsgTocsAskFinishUIGuideTask
  ///Э������һ��eMsgToGSToCSFromGC_FinishUIGuideTask->eMsgToGSToCSFromGC_CompCSGuideStepId
  /// </summary>
  public sealed partial class GuideCSStepComp : pb::IMessage<GuideCSStepComp> {
    private static readonly pb::MessageParser<GuideCSStepComp> _parser = new pb::MessageParser<GuideCSStepComp>(() => new GuideCSStepComp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuideCSStepComp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideCSStepComp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideCSStepComp(GuideCSStepComp other) : this() {
      msgnum_ = other.msgnum_;
      guidepart_ = other.guidepart_;
      bcomp_ = other.bcomp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideCSStepComp Clone() {
      return new GuideCSStepComp(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "guidepart" field.</summary>
    public const int GuidepartFieldNumber = 2;
    private int guidepart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Guidepart {
      get { return guidepart_; }
      set {
        guidepart_ = value;
      }
    }

    /// <summary>Field number for the "bcomp" field.</summary>
    public const int BcompFieldNumber = 3;
    private bool bcomp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bcomp {
      get { return bcomp_; }
      set {
        bcomp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuideCSStepComp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuideCSStepComp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Guidepart != other.Guidepart) return false;
      if (Bcomp != other.Bcomp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Guidepart != 0) hash ^= Guidepart.GetHashCode();
      if (Bcomp != false) hash ^= Bcomp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Guidepart != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Guidepart);
      }
      if (Bcomp != false) {
        output.WriteRawTag(24);
        output.WriteBool(Bcomp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Guidepart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Guidepart);
      }
      if (Bcomp != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuideCSStepComp other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Guidepart != 0) {
        Guidepart = other.Guidepart;
      }
      if (other.Bcomp != false) {
        Bcomp = other.Bcomp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Guidepart = input.ReadInt32();
            break;
          }
          case 24: {
            Bcomp = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///�ѻ�EmsgTocs__GCReplyDownTime
  ///Э������һ��eMsgToGSToCSFromGC_GCReplyDownTime->eMsgToGSToCSFromGC_GCReplyInviteToBattle
  /// </summary>
  public sealed partial class GCReplyInviteToBattle : pb::IMessage<GCReplyInviteToBattle> {
    private static readonly pb::MessageParser<GCReplyInviteToBattle> _parser = new pb::MessageParser<GCReplyInviteToBattle>(() => new GCReplyInviteToBattle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GCReplyInviteToBattle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCReplyInviteToBattle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCReplyInviteToBattle(GCReplyInviteToBattle other) : this() {
      msgnum_ = other.msgnum_;
      nickname_ = other.nickname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCReplyInviteToBattle Clone() {
      return new GCReplyInviteToBattle(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GCReplyInviteToBattle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GCReplyInviteToBattle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Nickname != other.Nickname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GCReplyInviteToBattle other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Login : pb::IMessage<Login> {
    private static readonly pb::MessageParser<Login> _parser = new pb::MessageParser<Login>(() => new Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login(Login other) : this() {
      msgnum_ = other.msgnum_;
      sdk_ = other.sdk_;
      platform_ = other.platform_;
      name_ = other.name_;
      passwd_ = other.passwd_;
      ipaddress_ = other.ipaddress_;
      equimentid_ = other.equimentid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login Clone() {
      return new Login(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "sdk" field.</summary>
    public const int SdkFieldNumber = 2;
    private int sdk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sdk {
      get { return sdk_; }
      set {
        sdk_ = value;
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 3;
    private int platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 5;
    private string passwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ipaddress" field.</summary>
    public const int IpaddressFieldNumber = 6;
    private string ipaddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddress {
      get { return ipaddress_; }
      set {
        ipaddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "equimentid" field.</summary>
    public const int EquimentidFieldNumber = 7;
    private string equimentid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Equimentid {
      get { return equimentid_; }
      set {
        equimentid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Sdk != other.Sdk) return false;
      if (Platform != other.Platform) return false;
      if (Name != other.Name) return false;
      if (Passwd != other.Passwd) return false;
      if (Ipaddress != other.Ipaddress) return false;
      if (Equimentid != other.Equimentid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Sdk != 0) hash ^= Sdk.GetHashCode();
      if (Platform != 0) hash ^= Platform.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
      if (Ipaddress.Length != 0) hash ^= Ipaddress.GetHashCode();
      if (Equimentid.Length != 0) hash ^= Equimentid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Sdk != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sdk);
      }
      if (Platform != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Platform);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Passwd.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Passwd);
      }
      if (Ipaddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Ipaddress);
      }
      if (Equimentid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Equimentid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Sdk != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sdk);
      }
      if (Platform != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Platform);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Passwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (Ipaddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddress);
      }
      if (Equimentid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Equimentid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Login other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Sdk != 0) {
        Sdk = other.Sdk;
      }
      if (other.Platform != 0) {
        Platform = other.Platform;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Passwd.Length != 0) {
        Passwd = other.Passwd;
      }
      if (other.Ipaddress.Length != 0) {
        Ipaddress = other.Ipaddress;
      }
      if (other.Equimentid.Length != 0) {
        Equimentid = other.Equimentid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Sdk = input.ReadInt32();
            break;
          }
          case 24: {
            Platform = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Passwd = input.ReadString();
            break;
          }
          case 50: {
            Ipaddress = input.ReadString();
            break;
          }
          case 58: {
            Equimentid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserGameInfo : pb::IMessage<UserGameInfo> {
    private static readonly pb::MessageParser<UserGameInfo> _parser = new pb::MessageParser<UserGameInfo>(() => new UserGameInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserGameInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGameInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGameInfo(UserGameInfo other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGameInfo Clone() {
      return new UserGameInfo(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserGameInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserGameInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserGameInfo other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuyRunes : pb::IMessage<BuyRunes> {
    private static readonly pb::MessageParser<BuyRunes> _parser = new pb::MessageParser<BuyRunes>(() => new BuyRunes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyRunes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyRunes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyRunes(BuyRunes other) : this() {
      msgnum_ = other.msgnum_;
      typeid_ = other.typeid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyRunes Clone() {
      return new BuyRunes(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "typeid" field.</summary>
    public const int TypeidFieldNumber = 2;
    private int typeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Typeid {
      get { return typeid_; }
      set {
        typeid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyRunes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyRunes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Typeid != other.Typeid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Typeid != 0) hash ^= Typeid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Typeid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Typeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Typeid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Typeid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyRunes other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Typeid != 0) {
        Typeid = other.Typeid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Typeid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EuipRunes : pb::IMessage<EuipRunes> {
    private static readonly pb::MessageParser<EuipRunes> _parser = new pb::MessageParser<EuipRunes>(() => new EuipRunes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EuipRunes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EuipRunes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EuipRunes(EuipRunes other) : this() {
      msgnum_ = other.msgnum_;
      runeid_ = other.runeid_;
      topos_ = other.topos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EuipRunes Clone() {
      return new EuipRunes(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "runeid" field.</summary>
    public const int RuneidFieldNumber = 2;
    private uint runeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Runeid {
      get { return runeid_; }
      set {
        runeid_ = value;
      }
    }

    /// <summary>Field number for the "topos" field.</summary>
    public const int ToposFieldNumber = 3;
    private int topos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Topos {
      get { return topos_; }
      set {
        topos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EuipRunes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EuipRunes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Runeid != other.Runeid) return false;
      if (Topos != other.Topos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Runeid != 0) hash ^= Runeid.GetHashCode();
      if (Topos != 0) hash ^= Topos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Runeid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Runeid);
      }
      if (Topos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Topos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Runeid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Runeid);
      }
      if (Topos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Topos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EuipRunes other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Runeid != 0) {
        Runeid = other.Runeid;
      }
      if (other.Topos != 0) {
        Topos = other.Topos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Runeid = input.ReadUInt32();
            break;
          }
          case 24: {
            Topos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnEuipRunes : pb::IMessage<UnEuipRunes> {
    private static readonly pb::MessageParser<UnEuipRunes> _parser = new pb::MessageParser<UnEuipRunes>(() => new UnEuipRunes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnEuipRunes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnEuipRunes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnEuipRunes(UnEuipRunes other) : this() {
      msgnum_ = other.msgnum_;
      page_ = other.page_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnEuipRunes Clone() {
      return new UnEuipRunes(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private int page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private int pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnEuipRunes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnEuipRunes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Page != other.Page) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (Pos != 0) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Page);
      }
      if (Pos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Page);
      }
      if (Pos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnEuipRunes other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.Pos != 0) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Page = input.ReadInt32();
            break;
          }
          case 24: {
            Pos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComposeRunes : pb::IMessage<ComposeRunes> {
    private static readonly pb::MessageParser<ComposeRunes> _parser = new pb::MessageParser<ComposeRunes>(() => new ComposeRunes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComposeRunes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeRunes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeRunes(ComposeRunes other) : this() {
      msgnum_ = other.msgnum_;
      runesid_ = other.runesid_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComposeRunes Clone() {
      return new ComposeRunes(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "runesid" field.</summary>
    public const int RunesidFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_runesid_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> runesid_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Runesid {
      get { return runesid_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComposeRunes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComposeRunes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if(!runesid_.Equals(other.runesid_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      hash ^= runesid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      runesid_.WriteTo(output, _repeated_runesid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      size += runesid_.CalculateSize(_repeated_runesid_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComposeRunes other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      runesid_.Add(other.runesid_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            runesid_.AddEntriesFrom(input, _repeated_runesid_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReconnectToGame : pb::IMessage<ReconnectToGame> {
    private static readonly pb::MessageParser<ReconnectToGame> _parser = new pb::MessageParser<ReconnectToGame>(() => new ReconnectToGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReconnectToGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectToGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectToGame(ReconnectToGame other) : this() {
      msgnum_ = other.msgnum_;
      name_ = other.name_;
      passwd_ = other.passwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectToGame Clone() {
      return new ReconnectToGame(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 3;
    private string passwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReconnectToGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReconnectToGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Name != other.Name) return false;
      if (Passwd != other.Passwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Passwd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Passwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReconnectToGame other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Passwd.Length != 0) {
        Passwd = other.Passwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComGuideStepID : pb::IMessage<ComGuideStepID> {
    private static readonly pb::MessageParser<ComGuideStepID> _parser = new pb::MessageParser<ComGuideStepID>(() => new ComGuideStepID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComGuideStepID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComGuideStepID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComGuideStepID(ComGuideStepID other) : this() {
      msgnum_ = other.msgnum_;
      type_ = other.type_;
      step_ = other.step_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComGuideStepID Clone() {
      return new ComGuideStepID(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 3;
    private int step_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComGuideStepID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComGuideStepID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Type != other.Type) return false;
      if (Step != other.Step) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Step != 0) hash ^= Step.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (Step != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Step);
      }
      if (State != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Step);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComGuideStepID other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Step != 0) {
        Step = other.Step;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Step = input.ReadInt32();
            break;
          }
          case 32: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskRoomList : pb::IMessage<AskRoomList> {
    private static readonly pb::MessageParser<AskRoomList> _parser = new pb::MessageParser<AskRoomList>(() => new AskRoomList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskRoomList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToCS.GCToCSReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRoomList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRoomList(AskRoomList other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRoomList Clone() {
      return new AskRoomList(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToCS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToCS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskRoomList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskRoomList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskRoomList other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToCS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
