// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BSToGC.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BSToGC {

  /// <summary>Holder for reflection information generated from BSToGC.proto</summary>
  public static partial class BSToGCReflection {

    #region Descriptor
    /// <summary>File descriptor for BSToGC.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BSToGCReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxCU1RvR0MucHJvdG8SBkJTVG9HQyKBAQoRQXNrR2F0ZUFkZHJlc3NSZXQS",
            "HAoFbWdzaWQYASABKA4yDS5CU1RvR0MuTXNnSUQSEgoKZ2F0ZWNsaWVudBgC",
            "IAEoBRINCgV0b2tlbhgDIAEoCRIRCgl1c2VyX25hbWUYBCABKAkSDAoEcG9y",
            "dBgFIAEoBRIKCgJpcBgGIAEoCSJKChNDbGluZXRMb2dpbkNoZWNrUmV0EhwK",
            "BW1nc2lkGAEgASgOMg0uQlNUb0dDLk1zZ0lEEhUKDWxvZ2luX3N1Y2Nlc3MY",
            "AiABKA0qZgoFTXNnSUQSCgoGdW5rbm93EAASJQogZU1zZ1RvR0NGcm9tQlNf",
            "QXNrR2F0ZUFkZHJlc3NSZXQQywESKgolZU1zZ1RvR0NGcm9tQlNfT25lQ2xp",
            "bmV0TG9naW5DaGVja1JldBDMAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::BSToGC.MsgID), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BSToGC.AskGateAddressRet), global::BSToGC.AskGateAddressRet.Parser, new[]{ "Mgsid", "Gateclient", "Token", "UserName", "Port", "Ip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BSToGC.ClinetLoginCheckRet), global::BSToGC.ClinetLoginCheckRet.Parser, new[]{ "Mgsid", "LoginSuccess" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgID {
    [pbr::OriginalName("unknow")] Unknow = 0,
    [pbr::OriginalName("eMsgToGCFromBS_AskGateAddressRet")] EMsgToGcfromBsAskGateAddressRet = 203,
    [pbr::OriginalName("eMsgToGCFromBS_OneClinetLoginCheckRet")] EMsgToGcfromBsOneClinetLoginCheckRet = 204,
  }

  #endregion

  #region Messages
  /// <summary>
  ///�ѻ�OnNetMsg_NotifyGateServerAddress
  ///eMsgToGCFromBS_AskGateAddressRet
  /// </summary>
  public sealed partial class AskGateAddressRet : pb::IMessage<AskGateAddressRet> {
    private static readonly pb::MessageParser<AskGateAddressRet> _parser = new pb::MessageParser<AskGateAddressRet>(() => new AskGateAddressRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskGateAddressRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BSToGC.BSToGCReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGateAddressRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGateAddressRet(AskGateAddressRet other) : this() {
      mgsid_ = other.mgsid_;
      gateclient_ = other.gateclient_;
      token_ = other.token_;
      userName_ = other.userName_;
      port_ = other.port_;
      ip_ = other.ip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskGateAddressRet Clone() {
      return new AskGateAddressRet(this);
    }

    /// <summary>Field number for the "mgsid" field.</summary>
    public const int MgsidFieldNumber = 1;
    private global::BSToGC.MsgID mgsid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BSToGC.MsgID Mgsid {
      get { return mgsid_; }
      set {
        mgsid_ = value;
      }
    }

    /// <summary>Field number for the "gateclient" field.</summary>
    public const int GateclientFieldNumber = 2;
    private int gateclient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gateclient {
      get { return gateclient_; }
      set {
        gateclient_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 4;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 5;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 6;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskGateAddressRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskGateAddressRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mgsid != other.Mgsid) return false;
      if (Gateclient != other.Gateclient) return false;
      if (Token != other.Token) return false;
      if (UserName != other.UserName) return false;
      if (Port != other.Port) return false;
      if (Ip != other.Ip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mgsid != 0) hash ^= Mgsid.GetHashCode();
      if (Gateclient != 0) hash ^= Gateclient.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mgsid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mgsid);
      }
      if (Gateclient != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gateclient);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserName);
      }
      if (Port != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Ip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mgsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mgsid);
      }
      if (Gateclient != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gateclient);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskGateAddressRet other) {
      if (other == null) {
        return;
      }
      if (other.Mgsid != 0) {
        Mgsid = other.Mgsid;
      }
      if (other.Gateclient != 0) {
        Gateclient = other.Gateclient;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            mgsid_ = (global::BSToGC.MsgID) input.ReadEnum();
            break;
          }
          case 16: {
            Gateclient = input.ReadInt32();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
          case 34: {
            UserName = input.ReadString();
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
          case 50: {
            Ip = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGCFromBS_OneClinetLoginCheckRet
  /// </summary>
  public sealed partial class ClinetLoginCheckRet : pb::IMessage<ClinetLoginCheckRet> {
    private static readonly pb::MessageParser<ClinetLoginCheckRet> _parser = new pb::MessageParser<ClinetLoginCheckRet>(() => new ClinetLoginCheckRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClinetLoginCheckRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BSToGC.BSToGCReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClinetLoginCheckRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClinetLoginCheckRet(ClinetLoginCheckRet other) : this() {
      mgsid_ = other.mgsid_;
      loginSuccess_ = other.loginSuccess_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClinetLoginCheckRet Clone() {
      return new ClinetLoginCheckRet(this);
    }

    /// <summary>Field number for the "mgsid" field.</summary>
    public const int MgsidFieldNumber = 1;
    private global::BSToGC.MsgID mgsid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BSToGC.MsgID Mgsid {
      get { return mgsid_; }
      set {
        mgsid_ = value;
      }
    }

    /// <summary>Field number for the "login_success" field.</summary>
    public const int LoginSuccessFieldNumber = 2;
    private uint loginSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LoginSuccess {
      get { return loginSuccess_; }
      set {
        loginSuccess_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClinetLoginCheckRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClinetLoginCheckRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mgsid != other.Mgsid) return false;
      if (LoginSuccess != other.LoginSuccess) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mgsid != 0) hash ^= Mgsid.GetHashCode();
      if (LoginSuccess != 0) hash ^= LoginSuccess.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mgsid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mgsid);
      }
      if (LoginSuccess != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LoginSuccess);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mgsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mgsid);
      }
      if (LoginSuccess != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoginSuccess);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClinetLoginCheckRet other) {
      if (other == null) {
        return;
      }
      if (other.Mgsid != 0) {
        Mgsid = other.Mgsid;
      }
      if (other.LoginSuccess != 0) {
        LoginSuccess = other.LoginSuccess;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            mgsid_ = (global::BSToGC.MsgID) input.ReadEnum();
            break;
          }
          case 16: {
            LoginSuccess = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
