// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GCToSS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GCToSS {

  /// <summary>Holder for reflection information generated from GCToSS.proto</summary>
  public static partial class GCToSSReflection {

    #region Descriptor
    /// <summary>File descriptor for GCToSS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GCToSSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxHQ1RvU1MucHJvdG8SBkdDVG9TUyKYAgoSQXNrU1NHdWlkZVN0ZXBDb21w",
            "Eh0KBW1zZ2lkGAEgASgOMg4uR0NUb1NTLk1zZ051bRIxCgRpbmZvGAMgAygL",
            "MiMuR0NUb1NTLkFza1NTR3VpZGVTdGVwQ29tcC50YXNraW5mbxpNCgh0YXNr",
            "aW5mbxIxCgVkdHlwZRgBIAEoDjIiLkdDVG9TUy5Bc2tTU0d1aWRlU3RlcENv",
            "bXAuZWRvdHlwZRIOCgZzdGVwaWQYAiABKAUiYQoHZWRvdHlwZRIKCgZ1bmtu",
            "b3cQABINCgllY29tcHRhc2sQARINCgllYnV5Z29vZHMQAhIPCgtlYm9ybnNv",
            "bGRlchADEg0KCWVib3JuaGVybxAEEgwKCG5leHRzdGVwEAUiMAoPSGVyb3NC",
            "YXR0bGVJbmZvEh0KBW1zZ2lkGAEgASgOMg4uR0NUb1NTLk1zZ051bSI2ChVB",
            "c2tIZXJvQXR0cmlidXRlc0luZm8SHQoFbXNnaWQYASABKA4yDi5HQ1RvU1Mu",
            "TXNnTnVtIkEKEUFza1F1aWNrQmF0dGxlRW5kEh0KBW1zZ2lkGAEgASgOMg4u",
            "R0NUb1NTLk1zZ051bRINCgVvdGhlchgCIAEoBSI5CglBc2tQaW5nU1MSHgoG",
            "bXNnbnVtGAEgASgOMg4uR0NUb1NTLk1zZ051bRIMCgR0aW1lGAIgASgDImsK",
            "DkFza0VudGVyQmF0dGxlEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9TUy5Nc2dO",
            "dW0SEgoKY2xpZW50VGltZRgCIAEoAxIQCghiYXR0bGVpZBgDIAEoBBITCgtv",
            "YnVzZXJzdGF0ZRgEIAEoBSIqCgNEaXISCQoBeBgBIAEoAhIJCgF6GAIgASgC",
            "Eg0KBWFuZ2xlGAMgASgCIkMKB01vdmVEaXISHgoGbXNnbnVtGAEgASgOMg4u",
            "R0NUb1NTLk1zZ051bRIYCgNkaXIYAyABKAsyCy5HQ1RvU1MuRGlyIioKCFN0",
            "b3BNb3ZlEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9TUy5Nc2dOdW0iOgoIQnV5",
            "R29vZHMSHgoGbXNnbnVtGAEgASgOMg4uR0NUb1NTLk1zZ051bRIOCgZ0eXBl",
            "aWQYAyABKAUiPAoIVXNlR29vZHMSHgoGbXNnbnVtGAEgASgOMg4uR0NUb1NT",
            "Lk1zZ051bRIQCghnb29kc3BvcxgDIAEoBSI9CglTZWxsR29vZHMSHgoGbXNn",
            "bnVtGAEgASgOMg4uR0NUb1NTLk1zZ051bRIQCghnb29kc3BvcxgDIAEoBSJL",
            "CglNb3ZlR29vZHMSHgoGbXNnbnVtGAEgASgOMg4uR0NUb1NTLk1zZ051bRIP",
            "Cgdmcm9tcG9zGAMgASgFEg0KBXRvcG9zGAQgASgFIk4KGFJlcG9ydEJhdHRs",
            "ZUxvYWRpbmdTdGF0ZRIeCgZtc2dudW0YASABKA4yDi5HQ1RvU1MuTXNnTnVt",
            "EhIKCmxvYWRpbmdudW0YAyABKAUiOwoIVXNlU2tpbGwSHgoGbXNnbnVtGAEg",
            "ASgOMg4uR0NUb1NTLk1zZ051bRIPCgdza2lsbGlkGAMgASgFIjcKB0xvY2tU",
            "YXISHgoGbXNnbnVtGAEgASgOMg4uR0NUb1NTLk1zZ051bRIMCgRndWlkGAMg",
            "ASgDIlUKFlJlcG9ydEFsdGFyU3RyYXdTb2xkZXISHgoGbXNnbnVtGAEgASgO",
            "Mg4uR0NUb1NTLk1zZ051bRIMCgR0eXBlGAIgASgFEg0KBWluZGV4GAMgASgF",
            "IjoKBkFic29yYhIeCgZtc2dudW0YASABKA4yDi5HQ1RvU1MuTXNnTnVtEhAK",
            "CHJlbW92ZWlkGAIgASgFIi4KDEdhc0V4cGxvc2lvbhIeCgZtc2dudW0YASAB",
            "KA4yDi5HQ1RvU1MuTXNnTnVtIioKCEJ1UmVib3JuEh4KBm1zZ251bRgBIAEo",
            "DjIOLkdDVG9TUy5Nc2dOdW0iNAoFR01DbWQSHgoGbXNnbnVtGAEgASgOMg4u",
            "R0NUb1NTLk1zZ051bRILCgNjbWQYAiABKAkiRgoGU3RlcElEEh4KBm1zZ251",
            "bRgBIAEoDjIOLkdDVG9TUy5Nc2dOdW0SDgoGc3RlcGlkGAMgASgFEgwKBHR5",
            "cGUYBCABKAUiKQoHQXV0b0F0axIeCgZtc2dudW0YASABKA4yDi5HQ1RvU1Mu",
            "TXNnTnVtIjEKD0d1aWRlSnVtcFRvSGFsbBIeCgZtc2dudW0YASABKA4yDi5H",
            "Q1RvU1MuTXNnTnVtIi4KDEFza1JlY29ubmVjdBIeCgZtc2dudW0YASABKA4y",
            "Di5HQ1RvU1MuTXNnTnVtIhsKA1BvcxIJCgF4GAEgASgCEgkKAXoYAiABKAIi",
            "QwoHTW92ZVRhchIeCgZtc2dudW0YASABKA4yDi5HQ1RvU1MuTXNnTnVtEhgK",
            "A3BvcxgDIAEoCzILLkdDVG9TUy5Qb3MiSwoKQXNrQm9ybk5QQxIeCgZtc2du",
            "dW0YASABKA4yDi5HQ1RvU1MuTXNnTnVtEg4KBnN0ZXBpZBgCIAEoBRINCgVz",
            "dGF0ZRgDIAEoBSI9Cg1BbHdheXNBdXRvQXRrEh4KBm1zZ251bRgBIAEoDjIO",
            "LkdDVG9TUy5Nc2dOdW0SDAoEZmxhZxgCIAEoCCI/Cg1UcnlTZWxlY2VIZXJv",
            "Eh4KBm1zZ251bRgBIAEoDjIOLkdDVG9TUy5Nc2dOdW0SDgoGaGVyb2lkGAIg",
            "ASgNIjwKClNlbGVjdEhlcm8SHgoGbXNnbnVtGAEgASgOMg4uR0NUb1NTLk1z",
            "Z051bRIOCgZoZXJvaWQYAiABKAUiQwoOU2VsZWN0UnVuZVBhZ2USHgoGbXNn",
            "bnVtGAEgASgOMg4uR0NUb1NTLk1zZ051bRIRCglwYWdlaW5kZXgYAiABKAUi",
            "LgoMTG9hZENvbXBsZXRlEh4KBm1zZ251bRgBIAEoDjIOLkdDVG9TUy5Nc2dO",
            "dW0q6AsKBk1zZ051bRIKCgZ1bmtub3cQABIeChhlTXNnVG9HU1RvU1NGcm9t",
            "R0NfQmVnaW4QgIABEiIKHGVNc2dUb0dTVG9TU0Zyb21HQ19Bc2tQaW5nU1MQ",
            "gYABEicKIWVNc2dUb0dTVG9TU0Zyb21HQ19Bc2tFbnRlckJhdHRsZRCCgAES",
            "IwodZU1zZ1RvR1NUb1NTRnJvbUdDX0Fza01vdmVEaXIQg4ABEiQKHmVNc2dU",
            "b0dTVG9TU0Zyb21HQ19Bc2tTdG9wTW92ZRCEgAESJAoeZU1zZ1RvR1NUb1NT",
            "RnJvbUdDX0Fza0J1eUdvb2RzEIWAARIkCh5lTXNnVG9HU1RvU1NGcm9tR0Nf",
            "QXNrVXNlR29vZHMQhoABEiUKH2VNc2dUb0dTVG9TU0Zyb21HQ19Bc2tTZWxs",
            "R29vZHMQh4ABEiUKH2VNc2dUb0dTVG9TU0Zyb21HQ19Bc2tNb3ZlR29vZHMQ",
            "iIABEjEKK2VNc2dUb0dTVG9TU0Zyb21HQ19SZXBvcnRCYXR0bGVMb2FkaW5n",
            "U3RhdGUQiYABEiIKHGVNc2dUb0dTVG9TU0Zyb21HQ19Bc2tBdHRhY2sQioAB",
            "EiQKHmVNc2dUb0dTVG9TU0Zyb21HQ19Bc2tVc2VTa2lsbBCLgAESJgogZU1z",
            "Z1RvR1NUb1NTRnJvbUdDX0Fza0xvY2tUYXJnZXQQjIABEi8KKWVNc2dUb0dT",
            "VG9TU0Zyb21HQ19SZXBvcnRBbHRhclN0cmF3U29sZGVyEI2AARIpCiNlTXNn",
            "VG9HU1RvU1NGcm9tR0NfQXNrQWJzb3JiTW9uc3RlchCOgAESLQonZU1zZ1Rv",
            "R1NUb1NTRnJvbUdDX0Fza0NhbmNlbEFic29yYlNraWxsEI+AARIoCiJlTXNn",
            "VG9HU1RvU1NGcm9tR0NfQXNrR2FzRXhwbG9zaW9uEJCAARIpCiNlTXNnVG9H",
            "U1RvU1NGcm9tR0NfQXNrQnV5UmVib3JuSGVybxCRgAESHgoYZU1zZ1RvR1NU",
            "b1NTRnJvbUdDX0dNQ21kEJKAARIkCh5lTXNnVG9HU1RvU1NGcm9tR0NfQXNr",
            "T0JCYXR0bGUQk4ABEh8KGWVNc2dUb0dTVG9TU0Zyb21HQ19TdGVwSWQQlIAB",
            "EiMKHWVNc2dUb0dTVG9TU0Zyb21HQ19Bc2tCb3JuTlBDEJWAARImCiBlTXNn",
            "VG9HU1RvU1NGcm9tR0NfQXNrQXV0b0F0dGFjaxCWgAESLgooZU1zZ1RvR1NU",
            "b1NTRnJvbUdDX0Fza0d1aWRlRW5kSnVtcFRvSGFsbBCXgAESJQofZU1zZ1Rv",
            "R1NUb1NTRnJvbUdDX0Fza1JlY29ubmVjdBCYgAESIwodZU1zZ1RvR1NUb1NT",
            "RnJvbUdDX0Fza01vdmVQb3MQmYABEikKI2VNc2dUb0dTVG9TU0Zyb21HQ19B",
            "c2tBbHdheXNBdXRvQXRrEJqAARIgChplTXNnVG9TU0Zyb21HU19SZXBvcnRT",
            "U01zZxCbgAESJgogZU1zZ1RvU1NGcm9tR1NfQXNrUXVpY2tCYXR0bGVFbmQQ",
            "nIABEikKI2VNc2dUb0dTVG9TU0Zyb21HQ19Bc2tUcnlTZWxlY3RIZXJvEPmA",
            "ARImCiBlTXNnVG9HU1RvU1NGcm9tR0NfQXNrU2VsZWN0SGVybxD6gAESKgok",
            "ZU1zZ1RvR1NUb1NTRnJvbUdDX0Fza1NlbGVjdFJ1bmVQYWdlEPuAARIxCitl",
            "TXNnVG9HU1RvU1NGcm9tR0NfUmVwb3J0TG9hZEJhdHRsZUNvbXBsZXRlEIiB",
            "ARIuCihlTXNnVG9HU1RvU1NGcm9tR0NfQXNrSGVyb0F0dHJpYnV0ZXNJbmZv",
            "EImBARIrCiVlTXNnVG9HU1RvU1NGcm9tR0NfQXNrSGVyb3NCYXR0bGVJbmZv",
            "EIqBARIpCiNlTXNnVG9HU1RvU1NGcm9tR0NfQXNrR3VpZGVTdGVwQ29tcBCc",
            "gQESHAoWZU1zZ1RvR1NUb1NTRnJvbUdDX0VuZBDohAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GCToSS.MsgNum), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AskSSGuideStepComp), global::GCToSS.AskSSGuideStepComp.Parser, new[]{ "Msgid", "Info" }, null, new[]{ typeof(global::GCToSS.AskSSGuideStepComp.Types.edotype) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AskSSGuideStepComp.Types.taskinfo), global::GCToSS.AskSSGuideStepComp.Types.taskinfo.Parser, new[]{ "Dtype", "Stepid" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.HerosBattleInfo), global::GCToSS.HerosBattleInfo.Parser, new[]{ "Msgid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AskHeroAttributesInfo), global::GCToSS.AskHeroAttributesInfo.Parser, new[]{ "Msgid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AskQuickBattleEnd), global::GCToSS.AskQuickBattleEnd.Parser, new[]{ "Msgid", "Other" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AskPingSS), global::GCToSS.AskPingSS.Parser, new[]{ "Msgnum", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AskEnterBattle), global::GCToSS.AskEnterBattle.Parser, new[]{ "Msgnum", "ClientTime", "Battleid", "Obuserstate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.Dir), global::GCToSS.Dir.Parser, new[]{ "X", "Z", "Angle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.MoveDir), global::GCToSS.MoveDir.Parser, new[]{ "Msgnum", "Dir" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.StopMove), global::GCToSS.StopMove.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.BuyGoods), global::GCToSS.BuyGoods.Parser, new[]{ "Msgnum", "Typeid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.UseGoods), global::GCToSS.UseGoods.Parser, new[]{ "Msgnum", "Goodspos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.SellGoods), global::GCToSS.SellGoods.Parser, new[]{ "Msgnum", "Goodspos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.MoveGoods), global::GCToSS.MoveGoods.Parser, new[]{ "Msgnum", "Frompos", "Topos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.ReportBattleLoadingState), global::GCToSS.ReportBattleLoadingState.Parser, new[]{ "Msgnum", "Loadingnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.UseSkill), global::GCToSS.UseSkill.Parser, new[]{ "Msgnum", "Skillid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.LockTar), global::GCToSS.LockTar.Parser, new[]{ "Msgnum", "Guid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.ReportAltarStrawSolder), global::GCToSS.ReportAltarStrawSolder.Parser, new[]{ "Msgnum", "Type", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.Absorb), global::GCToSS.Absorb.Parser, new[]{ "Msgnum", "Removeid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.GasExplosion), global::GCToSS.GasExplosion.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.BuReborn), global::GCToSS.BuReborn.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.GMCmd), global::GCToSS.GMCmd.Parser, new[]{ "Msgnum", "Cmd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.StepID), global::GCToSS.StepID.Parser, new[]{ "Msgnum", "Stepid", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AutoAtk), global::GCToSS.AutoAtk.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.GuideJumpToHall), global::GCToSS.GuideJumpToHall.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AskReconnect), global::GCToSS.AskReconnect.Parser, new[]{ "Msgnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.Pos), global::GCToSS.Pos.Parser, new[]{ "X", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.MoveTar), global::GCToSS.MoveTar.Parser, new[]{ "Msgnum", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AskBornNPC), global::GCToSS.AskBornNPC.Parser, new[]{ "Msgnum", "Stepid", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.AlwaysAutoAtk), global::GCToSS.AlwaysAutoAtk.Parser, new[]{ "Msgnum", "Flag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.TrySeleceHero), global::GCToSS.TrySeleceHero.Parser, new[]{ "Msgnum", "Heroid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.SelectHero), global::GCToSS.SelectHero.Parser, new[]{ "Msgnum", "Heroid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.SelectRunePage), global::GCToSS.SelectRunePage.Parser, new[]{ "Msgnum", "Pageindex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GCToSS.LoadComplete), global::GCToSS.LoadComplete.Parser, new[]{ "Msgnum" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgNum {
    [pbr::OriginalName("unknow")] Unknow = 0,
    [pbr::OriginalName("eMsgToGSToSSFromGC_Begin")] EMsgToGstoSsfromGcBegin = 16384,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskPingSS")] EMsgToGstoSsfromGcAskPingSs = 16385,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskEnterBattle")] EMsgToGstoSsfromGcAskEnterBattle = 16386,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskMoveDir")] EMsgToGstoSsfromGcAskMoveDir = 16387,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskStopMove")] EMsgToGstoSsfromGcAskStopMove = 16388,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskBuyGoods")] EMsgToGstoSsfromGcAskBuyGoods = 16389,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskUseGoods")] EMsgToGstoSsfromGcAskUseGoods = 16390,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskSellGoods")] EMsgToGstoSsfromGcAskSellGoods = 16391,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskMoveGoods")] EMsgToGstoSsfromGcAskMoveGoods = 16392,
    [pbr::OriginalName("eMsgToGSToSSFromGC_ReportBattleLoadingState")] EMsgToGstoSsfromGcReportBattleLoadingState = 16393,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskAttack")] EMsgToGstoSsfromGcAskAttack = 16394,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskUseSkill")] EMsgToGstoSsfromGcAskUseSkill = 16395,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskLockTarget")] EMsgToGstoSsfromGcAskLockTarget = 16396,
    [pbr::OriginalName("eMsgToGSToSSFromGC_ReportAltarStrawSolder")] EMsgToGstoSsfromGcReportAltarStrawSolder = 16397,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskAbsorbMonster")] EMsgToGstoSsfromGcAskAbsorbMonster = 16398,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskCancelAbsorbSkill")] EMsgToGstoSsfromGcAskCancelAbsorbSkill = 16399,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskGasExplosion")] EMsgToGstoSsfromGcAskGasExplosion = 16400,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskBuyRebornHero")] EMsgToGstoSsfromGcAskBuyRebornHero = 16401,
    [pbr::OriginalName("eMsgToGSToSSFromGC_GMCmd")] EMsgToGstoSsfromGcGmcmd = 16402,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskOBBattle")] EMsgToGstoSsfromGcAskObbattle = 16403,
    [pbr::OriginalName("eMsgToGSToSSFromGC_StepId")] EMsgToGstoSsfromGcStepId = 16404,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskBornNPC")] EMsgToGstoSsfromGcAskBornNpc = 16405,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskAutoAttack")] EMsgToGstoSsfromGcAskAutoAttack = 16406,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskGuideEndJumpToHall")] EMsgToGstoSsfromGcAskGuideEndJumpToHall = 16407,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskReconnect")] EMsgToGstoSsfromGcAskReconnect = 16408,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskMovePos")] EMsgToGstoSsfromGcAskMovePos = 16409,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskAlwaysAutoAtk")] EMsgToGstoSsfromGcAskAlwaysAutoAtk = 16410,
    [pbr::OriginalName("eMsgToSSFromGS_ReportSSMsg")] EMsgToSsfromGsReportSsmsg = 16411,
    [pbr::OriginalName("eMsgToSSFromGS_AskQuickBattleEnd")] EMsgToSsfromGsAskQuickBattleEnd = 16412,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskTrySelectHero")] EMsgToGstoSsfromGcAskTrySelectHero = 16505,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskSelectHero")] EMsgToGstoSsfromGcAskSelectHero = 16506,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskSelectRunePage")] EMsgToGstoSsfromGcAskSelectRunePage = 16507,
    [pbr::OriginalName("eMsgToGSToSSFromGC_ReportLoadBattleComplete")] EMsgToGstoSsfromGcReportLoadBattleComplete = 16520,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskHeroAttributesInfo")] EMsgToGstoSsfromGcAskHeroAttributesInfo = 16521,
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskHerosBattleInfo")] EMsgToGstoSsfromGcAskHerosBattleInfo = 16522,
    /// <summary>
    ///新手引导16540-16550
    /// </summary>
    [pbr::OriginalName("eMsgToGSToSSFromGC_AskGuideStepComp")] EMsgToGstoSsfromGcAskGuideStepComp = 16540,
    [pbr::OriginalName("eMsgToGSToSSFromGC_End")] EMsgToGstoSsfromGcEnd = 17000,
  }

  #endregion

  #region Messages
  public sealed partial class AskSSGuideStepComp : pb::IMessage<AskSSGuideStepComp> {
    private static readonly pb::MessageParser<AskSSGuideStepComp> _parser = new pb::MessageParser<AskSSGuideStepComp>(() => new AskSSGuideStepComp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskSSGuideStepComp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskSSGuideStepComp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskSSGuideStepComp(AskSSGuideStepComp other) : this() {
      msgid_ = other.msgid_;
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskSSGuideStepComp Clone() {
      return new AskSSGuideStepComp(this);
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 1;
    private global::GCToSS.MsgNum msgid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgid {
      get { return msgid_; }
      set {
        msgid_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GCToSS.AskSSGuideStepComp.Types.taskinfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(26, global::GCToSS.AskSSGuideStepComp.Types.taskinfo.Parser);
    private readonly pbc::RepeatedField<global::GCToSS.AskSSGuideStepComp.Types.taskinfo> info_ = new pbc::RepeatedField<global::GCToSS.AskSSGuideStepComp.Types.taskinfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GCToSS.AskSSGuideStepComp.Types.taskinfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskSSGuideStepComp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskSSGuideStepComp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgid != other.Msgid) return false;
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgid != 0) hash ^= Msgid.GetHashCode();
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgid);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskSSGuideStepComp other) {
      if (other == null) {
        return;
      }
      if (other.Msgid != 0) {
        Msgid = other.Msgid;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgid_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 26: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AskSSGuideStepComp message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum edotype {
        [pbr::OriginalName("unknow")] Unknow = 0,
        [pbr::OriginalName("ecomptask")] Ecomptask = 1,
        [pbr::OriginalName("ebuygoods")] Ebuygoods = 2,
        [pbr::OriginalName("ebornsolder")] Ebornsolder = 3,
        [pbr::OriginalName("ebornhero")] Ebornhero = 4,
        [pbr::OriginalName("nextstep")] Nextstep = 5,
      }

      public sealed partial class taskinfo : pb::IMessage<taskinfo> {
        private static readonly pb::MessageParser<taskinfo> _parser = new pb::MessageParser<taskinfo>(() => new taskinfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<taskinfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::GCToSS.AskSSGuideStepComp.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public taskinfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public taskinfo(taskinfo other) : this() {
          dtype_ = other.dtype_;
          stepid_ = other.stepid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public taskinfo Clone() {
          return new taskinfo(this);
        }

        /// <summary>Field number for the "dtype" field.</summary>
        public const int DtypeFieldNumber = 1;
        private global::GCToSS.AskSSGuideStepComp.Types.edotype dtype_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GCToSS.AskSSGuideStepComp.Types.edotype Dtype {
          get { return dtype_; }
          set {
            dtype_ = value;
          }
        }

        /// <summary>Field number for the "stepid" field.</summary>
        public const int StepidFieldNumber = 2;
        private int stepid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Stepid {
          get { return stepid_; }
          set {
            stepid_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as taskinfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(taskinfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Dtype != other.Dtype) return false;
          if (Stepid != other.Stepid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Dtype != 0) hash ^= Dtype.GetHashCode();
          if (Stepid != 0) hash ^= Stepid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Dtype != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dtype);
          }
          if (Stepid != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Stepid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Dtype != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dtype);
          }
          if (Stepid != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stepid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(taskinfo other) {
          if (other == null) {
            return;
          }
          if (other.Dtype != 0) {
            Dtype = other.Dtype;
          }
          if (other.Stepid != 0) {
            Stepid = other.Stepid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                dtype_ = (global::GCToSS.AskSSGuideStepComp.Types.edotype) input.ReadEnum();
                break;
              }
              case 16: {
                Stepid = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///eMsgToGSToSSFromGC_AskHerosBattleInfo
  /// </summary>
  public sealed partial class HerosBattleInfo : pb::IMessage<HerosBattleInfo> {
    private static readonly pb::MessageParser<HerosBattleInfo> _parser = new pb::MessageParser<HerosBattleInfo>(() => new HerosBattleInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HerosBattleInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HerosBattleInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HerosBattleInfo(HerosBattleInfo other) : this() {
      msgid_ = other.msgid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HerosBattleInfo Clone() {
      return new HerosBattleInfo(this);
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 1;
    private global::GCToSS.MsgNum msgid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgid {
      get { return msgid_; }
      set {
        msgid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HerosBattleInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HerosBattleInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgid != other.Msgid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgid != 0) hash ^= Msgid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HerosBattleInfo other) {
      if (other == null) {
        return;
      }
      if (other.Msgid != 0) {
        Msgid = other.Msgid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgid_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToSSFromGC_AskHeroAttributesInfo
  /// </summary>
  public sealed partial class AskHeroAttributesInfo : pb::IMessage<AskHeroAttributesInfo> {
    private static readonly pb::MessageParser<AskHeroAttributesInfo> _parser = new pb::MessageParser<AskHeroAttributesInfo>(() => new AskHeroAttributesInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskHeroAttributesInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskHeroAttributesInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskHeroAttributesInfo(AskHeroAttributesInfo other) : this() {
      msgid_ = other.msgid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskHeroAttributesInfo Clone() {
      return new AskHeroAttributesInfo(this);
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 1;
    private global::GCToSS.MsgNum msgid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgid {
      get { return msgid_; }
      set {
        msgid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskHeroAttributesInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskHeroAttributesInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgid != other.Msgid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgid != 0) hash ^= Msgid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskHeroAttributesInfo other) {
      if (other == null) {
        return;
      }
      if (other.Msgid != 0) {
        Msgid = other.Msgid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgid_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToSSFromGS_AskQuickBattleEnd
  /// </summary>
  public sealed partial class AskQuickBattleEnd : pb::IMessage<AskQuickBattleEnd> {
    private static readonly pb::MessageParser<AskQuickBattleEnd> _parser = new pb::MessageParser<AskQuickBattleEnd>(() => new AskQuickBattleEnd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskQuickBattleEnd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQuickBattleEnd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQuickBattleEnd(AskQuickBattleEnd other) : this() {
      msgid_ = other.msgid_;
      other_ = other.other_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskQuickBattleEnd Clone() {
      return new AskQuickBattleEnd(this);
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 1;
    private global::GCToSS.MsgNum msgid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgid {
      get { return msgid_; }
      set {
        msgid_ = value;
      }
    }

    /// <summary>Field number for the "other" field.</summary>
    public const int OtherFieldNumber = 2;
    private int other_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Other {
      get { return other_; }
      set {
        other_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskQuickBattleEnd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskQuickBattleEnd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgid != other.Msgid) return false;
      if (Other != other.Other) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgid != 0) hash ^= Msgid.GetHashCode();
      if (Other != 0) hash ^= Other.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      if (Other != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Other);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgid);
      }
      if (Other != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Other);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskQuickBattleEnd other) {
      if (other == null) {
        return;
      }
      if (other.Msgid != 0) {
        Msgid = other.Msgid;
      }
      if (other.Other != 0) {
        Other = other.Other;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgid_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Other = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskPingSS : pb::IMessage<AskPingSS> {
    private static readonly pb::MessageParser<AskPingSS> _parser = new pb::MessageParser<AskPingSS>(() => new AskPingSS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskPingSS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPingSS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPingSS(AskPingSS other) : this() {
      msgnum_ = other.msgnum_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPingSS Clone() {
      return new AskPingSS(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private long time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskPingSS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskPingSS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Time != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskPingSS other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskEnterBattle
  ///eMsgToGSToSSFromGC_AskEnterBattle
  /// </summary>
  public sealed partial class AskEnterBattle : pb::IMessage<AskEnterBattle> {
    private static readonly pb::MessageParser<AskEnterBattle> _parser = new pb::MessageParser<AskEnterBattle>(() => new AskEnterBattle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskEnterBattle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskEnterBattle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskEnterBattle(AskEnterBattle other) : this() {
      msgnum_ = other.msgnum_;
      clientTime_ = other.clientTime_;
      battleid_ = other.battleid_;
      obuserstate_ = other.obuserstate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskEnterBattle Clone() {
      return new AskEnterBattle(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "clientTime" field.</summary>
    public const int ClientTimeFieldNumber = 2;
    private long clientTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientTime {
      get { return clientTime_; }
      set {
        clientTime_ = value;
      }
    }

    /// <summary>Field number for the "battleid" field.</summary>
    public const int BattleidFieldNumber = 3;
    private ulong battleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Battleid {
      get { return battleid_; }
      set {
        battleid_ = value;
      }
    }

    /// <summary>Field number for the "obuserstate" field.</summary>
    public const int ObuserstateFieldNumber = 4;
    private int obuserstate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Obuserstate {
      get { return obuserstate_; }
      set {
        obuserstate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskEnterBattle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskEnterBattle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (ClientTime != other.ClientTime) return false;
      if (Battleid != other.Battleid) return false;
      if (Obuserstate != other.Obuserstate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (ClientTime != 0L) hash ^= ClientTime.GetHashCode();
      if (Battleid != 0UL) hash ^= Battleid.GetHashCode();
      if (Obuserstate != 0) hash ^= Obuserstate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (ClientTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ClientTime);
      }
      if (Battleid != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Battleid);
      }
      if (Obuserstate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Obuserstate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (ClientTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTime);
      }
      if (Battleid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Battleid);
      }
      if (Obuserstate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Obuserstate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskEnterBattle other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.ClientTime != 0L) {
        ClientTime = other.ClientTime;
      }
      if (other.Battleid != 0UL) {
        Battleid = other.Battleid;
      }
      if (other.Obuserstate != 0) {
        Obuserstate = other.Obuserstate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            ClientTime = input.ReadInt64();
            break;
          }
          case 24: {
            Battleid = input.ReadUInt64();
            break;
          }
          case 32: {
            Obuserstate = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换，同MoveDir
  /// </summary>
  public sealed partial class Dir : pb::IMessage<Dir> {
    private static readonly pb::MessageParser<Dir> _parser = new pb::MessageParser<Dir>(() => new Dir());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dir> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dir() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dir(Dir other) : this() {
      x_ = other.x_;
      z_ = other.z_;
      angle_ = other.angle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dir Clone() {
      return new Dir(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 2;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 3;
    private float angle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dir);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dir other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Angle, other.Angle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (Angle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Angle);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Z != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Z);
      }
      if (Angle != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Angle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (Angle != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dir other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.Angle != 0F) {
        Angle = other.Angle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Z = input.ReadFloat();
            break;
          }
          case 29: {
            Angle = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskMoveDir
  ///eMsgToGSToSSFromGC_AskMoveDir
  /// </summary>
  public sealed partial class MoveDir : pb::IMessage<MoveDir> {
    private static readonly pb::MessageParser<MoveDir> _parser = new pb::MessageParser<MoveDir>(() => new MoveDir());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveDir> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveDir() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveDir(MoveDir other) : this() {
      msgnum_ = other.msgnum_;
      dir_ = other.dir_ != null ? other.dir_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveDir Clone() {
      return new MoveDir(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 3;
    private global::GCToSS.Dir dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.Dir Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveDir);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveDir other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (!object.Equals(Dir, other.Dir)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (dir_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Dir);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (dir_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveDir other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.dir_ != null) {
        if (dir_ == null) {
          dir_ = new global::GCToSS.Dir();
        }
        Dir.MergeFrom(other.Dir);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 26: {
            if (dir_ == null) {
              dir_ = new global::GCToSS.Dir();
            }
            input.ReadMessage(dir_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskStopMove
  ///eMsgToGSToSSFromGC_AskStopMove
  /// </summary>
  public sealed partial class StopMove : pb::IMessage<StopMove> {
    private static readonly pb::MessageParser<StopMove> _parser = new pb::MessageParser<StopMove>(() => new StopMove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopMove(StopMove other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopMove Clone() {
      return new StopMove(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopMove other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskBuyGoods
  ///eMsgToGSToSSFromGC_AskBuyGoods
  /// </summary>
  public sealed partial class BuyGoods : pb::IMessage<BuyGoods> {
    private static readonly pb::MessageParser<BuyGoods> _parser = new pb::MessageParser<BuyGoods>(() => new BuyGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuyGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyGoods(BuyGoods other) : this() {
      msgnum_ = other.msgnum_;
      typeid_ = other.typeid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuyGoods Clone() {
      return new BuyGoods(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "typeid" field.</summary>
    public const int TypeidFieldNumber = 3;
    private int typeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Typeid {
      get { return typeid_; }
      set {
        typeid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuyGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuyGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Typeid != other.Typeid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Typeid != 0) hash ^= Typeid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Typeid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Typeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Typeid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Typeid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuyGoods other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Typeid != 0) {
        Typeid = other.Typeid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 24: {
            Typeid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskUseGoods
  ///eMsgToGSToSSFromGC_AskUseGoods
  /// </summary>
  public sealed partial class UseGoods : pb::IMessage<UseGoods> {
    private static readonly pb::MessageParser<UseGoods> _parser = new pb::MessageParser<UseGoods>(() => new UseGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseGoods(UseGoods other) : this() {
      msgnum_ = other.msgnum_;
      goodspos_ = other.goodspos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseGoods Clone() {
      return new UseGoods(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "goodspos" field.</summary>
    public const int GoodsposFieldNumber = 3;
    private int goodspos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Goodspos {
      get { return goodspos_; }
      set {
        goodspos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Goodspos != other.Goodspos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Goodspos != 0) hash ^= Goodspos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Goodspos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Goodspos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Goodspos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Goodspos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseGoods other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Goodspos != 0) {
        Goodspos = other.Goodspos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 24: {
            Goodspos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskSellGoods
  ///eMsgToGSToSSFromGC_AskSellGoods
  /// </summary>
  public sealed partial class SellGoods : pb::IMessage<SellGoods> {
    private static readonly pb::MessageParser<SellGoods> _parser = new pb::MessageParser<SellGoods>(() => new SellGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SellGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellGoods(SellGoods other) : this() {
      msgnum_ = other.msgnum_;
      goodspos_ = other.goodspos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SellGoods Clone() {
      return new SellGoods(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "goodspos" field.</summary>
    public const int GoodsposFieldNumber = 3;
    private int goodspos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Goodspos {
      get { return goodspos_; }
      set {
        goodspos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SellGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SellGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Goodspos != other.Goodspos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Goodspos != 0) hash ^= Goodspos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Goodspos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Goodspos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Goodspos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Goodspos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SellGoods other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Goodspos != 0) {
        Goodspos = other.Goodspos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 24: {
            Goodspos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskMoveGoods
  ///eMsgToGSToSSFromGC_AskMoveGoods
  /// </summary>
  public sealed partial class MoveGoods : pb::IMessage<MoveGoods> {
    private static readonly pb::MessageParser<MoveGoods> _parser = new pb::MessageParser<MoveGoods>(() => new MoveGoods());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveGoods> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveGoods() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveGoods(MoveGoods other) : this() {
      msgnum_ = other.msgnum_;
      frompos_ = other.frompos_;
      topos_ = other.topos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveGoods Clone() {
      return new MoveGoods(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "frompos" field.</summary>
    public const int FromposFieldNumber = 3;
    private int frompos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Frompos {
      get { return frompos_; }
      set {
        frompos_ = value;
      }
    }

    /// <summary>Field number for the "topos" field.</summary>
    public const int ToposFieldNumber = 4;
    private int topos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Topos {
      get { return topos_; }
      set {
        topos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveGoods);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveGoods other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Frompos != other.Frompos) return false;
      if (Topos != other.Topos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Frompos != 0) hash ^= Frompos.GetHashCode();
      if (Topos != 0) hash ^= Topos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Frompos != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Frompos);
      }
      if (Topos != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Topos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Frompos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Frompos);
      }
      if (Topos != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Topos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveGoods other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Frompos != 0) {
        Frompos = other.Frompos;
      }
      if (other.Topos != 0) {
        Topos = other.Topos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 24: {
            Frompos = input.ReadInt32();
            break;
          }
          case 32: {
            Topos = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReportBattleLoadingState : pb::IMessage<ReportBattleLoadingState> {
    private static readonly pb::MessageParser<ReportBattleLoadingState> _parser = new pb::MessageParser<ReportBattleLoadingState>(() => new ReportBattleLoadingState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportBattleLoadingState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportBattleLoadingState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportBattleLoadingState(ReportBattleLoadingState other) : this() {
      msgnum_ = other.msgnum_;
      loadingnum_ = other.loadingnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportBattleLoadingState Clone() {
      return new ReportBattleLoadingState(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "loadingnum" field.</summary>
    public const int LoadingnumFieldNumber = 3;
    private int loadingnum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Loadingnum {
      get { return loadingnum_; }
      set {
        loadingnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportBattleLoadingState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportBattleLoadingState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Loadingnum != other.Loadingnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Loadingnum != 0) hash ^= Loadingnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Loadingnum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Loadingnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Loadingnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Loadingnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportBattleLoadingState other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Loadingnum != 0) {
        Loadingnum = other.Loadingnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 24: {
            Loadingnum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskUseSkill
  ///eMsgToGSToSSFromGC_AskUseSkill
  /// </summary>
  public sealed partial class UseSkill : pb::IMessage<UseSkill> {
    private static readonly pb::MessageParser<UseSkill> _parser = new pb::MessageParser<UseSkill>(() => new UseSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UseSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseSkill(UseSkill other) : this() {
      msgnum_ = other.msgnum_;
      skillid_ = other.skillid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UseSkill Clone() {
      return new UseSkill(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "skillid" field.</summary>
    public const int SkillidFieldNumber = 3;
    private int skillid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Skillid {
      get { return skillid_; }
      set {
        skillid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UseSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UseSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Skillid != other.Skillid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Skillid != 0) hash ^= Skillid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Skillid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Skillid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Skillid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skillid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UseSkill other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Skillid != 0) {
        Skillid = other.Skillid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 24: {
            Skillid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskLockTarget
  ///名不一致eMsgToGSToSSFromGC_AskLockTargt->eMsgToGSToSSFromGC_AskLockTarget
  /// </summary>
  public sealed partial class LockTar : pb::IMessage<LockTar> {
    private static readonly pb::MessageParser<LockTar> _parser = new pb::MessageParser<LockTar>(() => new LockTar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LockTar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockTar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockTar(LockTar other) : this() {
      msgnum_ = other.msgnum_;
      guid_ = other.guid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LockTar Clone() {
      return new LockTar(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 3;
    private long guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LockTar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LockTar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Guid != other.Guid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Guid != 0L) hash ^= Guid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Guid != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Guid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Guid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Guid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LockTar other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Guid != 0L) {
        Guid = other.Guid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 24: {
            Guid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_ReportAltarStrawSolder
  ///eMsgToGSToSSFromGC_ReportAltarStrawSolder
  /// </summary>
  public sealed partial class ReportAltarStrawSolder : pb::IMessage<ReportAltarStrawSolder> {
    private static readonly pb::MessageParser<ReportAltarStrawSolder> _parser = new pb::MessageParser<ReportAltarStrawSolder>(() => new ReportAltarStrawSolder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportAltarStrawSolder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportAltarStrawSolder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportAltarStrawSolder(ReportAltarStrawSolder other) : this() {
      msgnum_ = other.msgnum_;
      type_ = other.type_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportAltarStrawSolder Clone() {
      return new ReportAltarStrawSolder(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportAltarStrawSolder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportAltarStrawSolder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Type != other.Type) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Type);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportAltarStrawSolder other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Type = input.ReadInt32();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskAbsorb
  ///eMsgToGSToSSFromGC_AskAbsorbMonster
  /// </summary>
  public sealed partial class Absorb : pb::IMessage<Absorb> {
    private static readonly pb::MessageParser<Absorb> _parser = new pb::MessageParser<Absorb>(() => new Absorb());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Absorb> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Absorb() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Absorb(Absorb other) : this() {
      msgnum_ = other.msgnum_;
      removeid_ = other.removeid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Absorb Clone() {
      return new Absorb(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "removeid" field.</summary>
    public const int RemoveidFieldNumber = 2;
    private int removeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Removeid {
      get { return removeid_; }
      set {
        removeid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Absorb);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Absorb other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Removeid != other.Removeid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Removeid != 0) hash ^= Removeid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Removeid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Removeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Removeid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Removeid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Absorb other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Removeid != 0) {
        Removeid = other.Removeid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Removeid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换AskGasExplosion
  ///协议名不一致eMsgToGSToCSFromGC_AskGasExplosion->eMsgToGSToSSFromGC_AskGasExplosion
  /// </summary>
  public sealed partial class GasExplosion : pb::IMessage<GasExplosion> {
    private static readonly pb::MessageParser<GasExplosion> _parser = new pb::MessageParser<GasExplosion>(() => new GasExplosion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GasExplosion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GasExplosion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GasExplosion(GasExplosion other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GasExplosion Clone() {
      return new GasExplosion(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GasExplosion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GasExplosion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GasExplosion other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换Resurrection
  ///eMsgToGSToSSFromGC_AskBuyRebornHero
  /// </summary>
  public sealed partial class BuReborn : pb::IMessage<BuReborn> {
    private static readonly pb::MessageParser<BuReborn> _parser = new pb::MessageParser<BuReborn>(() => new BuReborn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuReborn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuReborn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuReborn(BuReborn other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuReborn Clone() {
      return new BuReborn(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuReborn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuReborn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuReborn other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_eMsgToGSToCSFromGC_GMCmd
  ///协议名不一致eMsgToGSToCSFromGC_GMCmd->eMsgToGSToSSFromGC_GMCmd
  /// </summary>
  public sealed partial class GMCmd : pb::IMessage<GMCmd> {
    private static readonly pb::MessageParser<GMCmd> _parser = new pb::MessageParser<GMCmd>(() => new GMCmd());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GMCmd> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GMCmd() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GMCmd(GMCmd other) : this() {
      msgnum_ = other.msgnum_;
      cmd_ = other.cmd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GMCmd Clone() {
      return new GMCmd(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "cmd" field.</summary>
    public const int CmdFieldNumber = 2;
    private string cmd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cmd {
      get { return cmd_; }
      set {
        cmd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GMCmd);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GMCmd other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Cmd != other.Cmd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Cmd.Length != 0) hash ^= Cmd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Cmd.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cmd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Cmd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cmd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GMCmd other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Cmd.Length != 0) {
        Cmd = other.Cmd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 18: {
            Cmd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_GuideFinishStep
  ///eMsgToGsToCSFromGC_GuideStep->eMsgToGSToSSFromGC_StepId
  /// </summary>
  public sealed partial class StepID : pb::IMessage<StepID> {
    private static readonly pb::MessageParser<StepID> _parser = new pb::MessageParser<StepID>(() => new StepID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepID(StepID other) : this() {
      msgnum_ = other.msgnum_;
      stepid_ = other.stepid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepID Clone() {
      return new StepID(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "stepid" field.</summary>
    public const int StepidFieldNumber = 3;
    private int stepid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stepid {
      get { return stepid_; }
      set {
        stepid_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Stepid != other.Stepid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Stepid != 0) hash ^= Stepid.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Stepid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Stepid);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Stepid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stepid);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepID other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Stepid != 0) {
        Stepid = other.Stepid;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 24: {
            Stepid = input.ReadInt32();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换GameAutoFight
  ///eMsgToGSToSSFromGC_AskAutoAttack
  /// </summary>
  public sealed partial class AutoAtk : pb::IMessage<AutoAtk> {
    private static readonly pb::MessageParser<AutoAtk> _parser = new pb::MessageParser<AutoAtk>(() => new AutoAtk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoAtk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoAtk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoAtk(AutoAtk other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoAtk Clone() {
      return new AutoAtk(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoAtk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoAtk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoAtk other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_FinishAllGuideToLobby
  ///eMsgToGSToSSFromGC_AskGuideEndJumpToHall
  /// </summary>
  public sealed partial class GuideJumpToHall : pb::IMessage<GuideJumpToHall> {
    private static readonly pb::MessageParser<GuideJumpToHall> _parser = new pb::MessageParser<GuideJumpToHall>(() => new GuideJumpToHall());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuideJumpToHall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideJumpToHall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideJumpToHall(GuideJumpToHall other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuideJumpToHall Clone() {
      return new GuideJumpToHall(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuideJumpToHall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuideJumpToHall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuideJumpToHall other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_AskReconnectInfo
  ///协议名不一致eMsgToGSToSSFromGC_AskReconnectInfo->eMsgToGSToSSFromGC_AskReconnect
  /// </summary>
  public sealed partial class AskReconnect : pb::IMessage<AskReconnect> {
    private static readonly pb::MessageParser<AskReconnect> _parser = new pb::MessageParser<AskReconnect>(() => new AskReconnect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskReconnect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReconnect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReconnect(AskReconnect other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskReconnect Clone() {
      return new AskReconnect(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskReconnect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskReconnect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskReconnect other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Pos : pb::IMessage<Pos> {
    private static readonly pb::MessageParser<Pos> _parser = new pb::MessageParser<Pos>(() => new Pos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos(Pos other) : this() {
      x_ = other.x_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pos Clone() {
      return new Pos(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 2;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Z != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pos other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MoveTar : pb::IMessage<MoveTar> {
    private static readonly pb::MessageParser<MoveTar> _parser = new pb::MessageParser<MoveTar>(() => new MoveTar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveTar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveTar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveTar(MoveTar other) : this() {
      msgnum_ = other.msgnum_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveTar Clone() {
      return new MoveTar(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private global::GCToSS.Pos pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.Pos Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveTar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveTar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveTar other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          pos_ = new global::GCToSS.Pos();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 26: {
            if (pos_ == null) {
              pos_ = new global::GCToSS.Pos();
            }
            input.ReadMessage(pos_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///已换EmsgToss_GuideAskBornNpc
  ///协议名不一致eMsgToGsToCSFromGC_GuideSendNpc->eMsgToGSToSSFromGC_AskBornNPC
  /// </summary>
  public sealed partial class AskBornNPC : pb::IMessage<AskBornNPC> {
    private static readonly pb::MessageParser<AskBornNPC> _parser = new pb::MessageParser<AskBornNPC>(() => new AskBornNPC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskBornNPC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskBornNPC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskBornNPC(AskBornNPC other) : this() {
      msgnum_ = other.msgnum_;
      stepid_ = other.stepid_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskBornNPC Clone() {
      return new AskBornNPC(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "stepid" field.</summary>
    public const int StepidFieldNumber = 2;
    private int stepid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Stepid {
      get { return stepid_; }
      set {
        stepid_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskBornNPC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskBornNPC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Stepid != other.Stepid) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Stepid != 0) hash ^= Stepid.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Stepid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Stepid);
      }
      if (State != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Stepid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stepid);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskBornNPC other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Stepid != 0) {
        Stepid = other.Stepid;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Stepid = input.ReadInt32();
            break;
          }
          case 24: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AlwaysAutoAtk : pb::IMessage<AlwaysAutoAtk> {
    private static readonly pb::MessageParser<AlwaysAutoAtk> _parser = new pb::MessageParser<AlwaysAutoAtk>(() => new AlwaysAutoAtk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AlwaysAutoAtk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlwaysAutoAtk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlwaysAutoAtk(AlwaysAutoAtk other) : this() {
      msgnum_ = other.msgnum_;
      flag_ = other.flag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AlwaysAutoAtk Clone() {
      return new AlwaysAutoAtk(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private bool flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AlwaysAutoAtk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AlwaysAutoAtk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Flag != other.Flag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Flag != false) hash ^= Flag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Flag != false) {
        output.WriteRawTag(16);
        output.WriteBool(Flag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Flag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AlwaysAutoAtk other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Flag != false) {
        Flag = other.Flag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Flag = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToSSFromGC_AskTrySelectHero
  /// </summary>
  public sealed partial class TrySeleceHero : pb::IMessage<TrySeleceHero> {
    private static readonly pb::MessageParser<TrySeleceHero> _parser = new pb::MessageParser<TrySeleceHero>(() => new TrySeleceHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrySeleceHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrySeleceHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrySeleceHero(TrySeleceHero other) : this() {
      msgnum_ = other.msgnum_;
      heroid_ = other.heroid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrySeleceHero Clone() {
      return new TrySeleceHero(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "heroid" field.</summary>
    public const int HeroidFieldNumber = 2;
    private uint heroid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Heroid {
      get { return heroid_; }
      set {
        heroid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrySeleceHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrySeleceHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Heroid != other.Heroid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Heroid != 0) hash ^= Heroid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Heroid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Heroid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Heroid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Heroid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrySeleceHero other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Heroid != 0) {
        Heroid = other.Heroid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Heroid = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToSSFromGC_AskSelectHero
  /// </summary>
  public sealed partial class SelectHero : pb::IMessage<SelectHero> {
    private static readonly pb::MessageParser<SelectHero> _parser = new pb::MessageParser<SelectHero>(() => new SelectHero());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectHero> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectHero() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectHero(SelectHero other) : this() {
      msgnum_ = other.msgnum_;
      heroid_ = other.heroid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectHero Clone() {
      return new SelectHero(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "heroid" field.</summary>
    public const int HeroidFieldNumber = 2;
    private int heroid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Heroid {
      get { return heroid_; }
      set {
        heroid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectHero);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectHero other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Heroid != other.Heroid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Heroid != 0) hash ^= Heroid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Heroid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Heroid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Heroid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Heroid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectHero other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Heroid != 0) {
        Heroid = other.Heroid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Heroid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToSSFromGC_AskSelectRunePage
  /// </summary>
  public sealed partial class SelectRunePage : pb::IMessage<SelectRunePage> {
    private static readonly pb::MessageParser<SelectRunePage> _parser = new pb::MessageParser<SelectRunePage>(() => new SelectRunePage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectRunePage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectRunePage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectRunePage(SelectRunePage other) : this() {
      msgnum_ = other.msgnum_;
      pageindex_ = other.pageindex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectRunePage Clone() {
      return new SelectRunePage(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    /// <summary>Field number for the "pageindex" field.</summary>
    public const int PageindexFieldNumber = 2;
    private int pageindex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pageindex {
      get { return pageindex_; }
      set {
        pageindex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectRunePage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectRunePage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      if (Pageindex != other.Pageindex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (Pageindex != 0) hash ^= Pageindex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (Pageindex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Pageindex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (Pageindex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pageindex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectRunePage other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      if (other.Pageindex != 0) {
        Pageindex = other.Pageindex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
          case 16: {
            Pageindex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///eMsgToGSToSSFromGC_ReportLoadBattleComplete
  /// </summary>
  public sealed partial class LoadComplete : pb::IMessage<LoadComplete> {
    private static readonly pb::MessageParser<LoadComplete> _parser = new pb::MessageParser<LoadComplete>(() => new LoadComplete());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadComplete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GCToSS.GCToSSReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadComplete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadComplete(LoadComplete other) : this() {
      msgnum_ = other.msgnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadComplete Clone() {
      return new LoadComplete(this);
    }

    /// <summary>Field number for the "msgnum" field.</summary>
    public const int MsgnumFieldNumber = 1;
    private global::GCToSS.MsgNum msgnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GCToSS.MsgNum Msgnum {
      get { return msgnum_; }
      set {
        msgnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadComplete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadComplete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgnum != other.Msgnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgnum != 0) hash ^= Msgnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgnum != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadComplete other) {
      if (other == null) {
        return;
      }
      if (other.Msgnum != 0) {
        Msgnum = other.Msgnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgnum_ = (global::GCToSS.MsgNum) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
