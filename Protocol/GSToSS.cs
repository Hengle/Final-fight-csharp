// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GSToSS.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GSToSS {

  /// <summary>Holder for reflection information generated from GSToSS.proto</summary>
  public static partial class GSToSSReflection {

    #region Descriptor
    /// <summary>File descriptor for GSToSS.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GSToSSReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxHU1RvU1MucHJvdG8SBkdTVG9TUyI+CgtVc2VyT2ZmTGluZRIcCgVtZ3Np",
            "ZBgBIAEoDjINLkdTVG9TUy5Nc2dJRBIRCgl1c2VybmV0aWQYAiABKAUiNQoH",
            "QXNrUGluZxIcCgVtZ3NpZBgBIAEoDjINLkdTVG9TUy5Nc2dJRBIMCgR0aW1l",
            "GAIgASgDIkUKCkFza1JlZ2lzdGUSHAoFbXNnaWQYASABKA4yDS5HU1RvU1Mu",
            "TXNnSUQSDAoEZ3NpZBgCIAEoBRILCgNwd2QYAyABKAkiXwoLUmVwb3J0R0NN",
            "c2cSHAoFbWdzaWQYASABKA4yDS5HU1RvU1MuTXNnSUQSDAoEbnNpZBgCIAEo",
            "BRIQCghvdGhlcm1zZxgDIAEoCRISCgpvdGhlcm1zZ2lkGAQgASgFKswBCgVN",
            "c2dJRBIKCgZ1bmtub3cQABIaChRlTXNnVG9TU0Zyb21HU19CZWdpbhCAgAES",
            "HAoWZU1zZ1RvU1NGcm9tR1NfQXNrUGluZxCBgAESHwoZZU1zZ1RvU1NGcm9t",
            "R1NfQXNrUmVnaXN0ZRCCgAESIAoaZU1zZ1RvU1NGcm9tR1NfUmVwb3J0R0NN",
            "c2cQg4ABEiAKGmVNc2dUb1NTRnJvbUdTX1VzZXJPZmZMaW5lEISAARIYChJl",
            "TXNnVG9TU0Zyb21HU19FbmQQ6IQBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GSToSS.MsgID), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GSToSS.UserOffLine), global::GSToSS.UserOffLine.Parser, new[]{ "Mgsid", "Usernetid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GSToSS.AskPing), global::GSToSS.AskPing.Parser, new[]{ "Mgsid", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GSToSS.AskRegiste), global::GSToSS.AskRegiste.Parser, new[]{ "Msgid", "Gsid", "Pwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GSToSS.ReportGCMsg), global::GSToSS.ReportGCMsg.Parser, new[]{ "Mgsid", "Nsid", "Othermsg", "Othermsgid" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgID {
    [pbr::OriginalName("unknow")] Unknow = 0,
    [pbr::OriginalName("eMsgToSSFromGS_Begin")] EMsgToSsfromGsBegin = 16384,
    [pbr::OriginalName("eMsgToSSFromGS_AskPing")] EMsgToSsfromGsAskPing = 16385,
    [pbr::OriginalName("eMsgToSSFromGS_AskRegiste")] EMsgToSsfromGsAskRegiste = 16386,
    [pbr::OriginalName("eMsgToSSFromGS_ReportGCMsg")] EMsgToSsfromGsReportGcmsg = 16387,
    [pbr::OriginalName("eMsgToSSFromGS_UserOffLine")] EMsgToSsfromGsUserOffLine = 16388,
    [pbr::OriginalName("eMsgToSSFromGS_End")] EMsgToSsfromGsEnd = 17000,
  }

  #endregion

  #region Messages
  public sealed partial class UserOffLine : pb::IMessage<UserOffLine> {
    private static readonly pb::MessageParser<UserOffLine> _parser = new pb::MessageParser<UserOffLine>(() => new UserOffLine());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserOffLine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GSToSS.GSToSSReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOffLine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOffLine(UserOffLine other) : this() {
      mgsid_ = other.mgsid_;
      usernetid_ = other.usernetid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOffLine Clone() {
      return new UserOffLine(this);
    }

    /// <summary>Field number for the "mgsid" field.</summary>
    public const int MgsidFieldNumber = 1;
    private global::GSToSS.MsgID mgsid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GSToSS.MsgID Mgsid {
      get { return mgsid_; }
      set {
        mgsid_ = value;
      }
    }

    /// <summary>Field number for the "usernetid" field.</summary>
    public const int UsernetidFieldNumber = 2;
    private int usernetid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Usernetid {
      get { return usernetid_; }
      set {
        usernetid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserOffLine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserOffLine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mgsid != other.Mgsid) return false;
      if (Usernetid != other.Usernetid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mgsid != 0) hash ^= Mgsid.GetHashCode();
      if (Usernetid != 0) hash ^= Usernetid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mgsid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mgsid);
      }
      if (Usernetid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Usernetid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mgsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mgsid);
      }
      if (Usernetid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Usernetid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserOffLine other) {
      if (other == null) {
        return;
      }
      if (other.Mgsid != 0) {
        Mgsid = other.Mgsid;
      }
      if (other.Usernetid != 0) {
        Usernetid = other.Usernetid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            mgsid_ = (global::GSToSS.MsgID) input.ReadEnum();
            break;
          }
          case 16: {
            Usernetid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskPing : pb::IMessage<AskPing> {
    private static readonly pb::MessageParser<AskPing> _parser = new pb::MessageParser<AskPing>(() => new AskPing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskPing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GSToSS.GSToSSReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPing(AskPing other) : this() {
      mgsid_ = other.mgsid_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskPing Clone() {
      return new AskPing(this);
    }

    /// <summary>Field number for the "mgsid" field.</summary>
    public const int MgsidFieldNumber = 1;
    private global::GSToSS.MsgID mgsid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GSToSS.MsgID Mgsid {
      get { return mgsid_; }
      set {
        mgsid_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private long time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskPing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskPing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mgsid != other.Mgsid) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mgsid != 0) hash ^= Mgsid.GetHashCode();
      if (Time != 0L) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mgsid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mgsid);
      }
      if (Time != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mgsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mgsid);
      }
      if (Time != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskPing other) {
      if (other == null) {
        return;
      }
      if (other.Mgsid != 0) {
        Mgsid = other.Mgsid;
      }
      if (other.Time != 0L) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            mgsid_ = (global::GSToSS.MsgID) input.ReadEnum();
            break;
          }
          case 16: {
            Time = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AskRegiste : pb::IMessage<AskRegiste> {
    private static readonly pb::MessageParser<AskRegiste> _parser = new pb::MessageParser<AskRegiste>(() => new AskRegiste());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AskRegiste> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GSToSS.GSToSSReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRegiste() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRegiste(AskRegiste other) : this() {
      msgid_ = other.msgid_;
      gsid_ = other.gsid_;
      pwd_ = other.pwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AskRegiste Clone() {
      return new AskRegiste(this);
    }

    /// <summary>Field number for the "msgid" field.</summary>
    public const int MsgidFieldNumber = 1;
    private global::GSToSS.MsgID msgid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GSToSS.MsgID Msgid {
      get { return msgid_; }
      set {
        msgid_ = value;
      }
    }

    /// <summary>Field number for the "gsid" field.</summary>
    public const int GsidFieldNumber = 2;
    private int gsid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gsid {
      get { return gsid_; }
      set {
        gsid_ = value;
      }
    }

    /// <summary>Field number for the "pwd" field.</summary>
    public const int PwdFieldNumber = 3;
    private string pwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pwd {
      get { return pwd_; }
      set {
        pwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AskRegiste);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AskRegiste other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msgid != other.Msgid) return false;
      if (Gsid != other.Gsid) return false;
      if (Pwd != other.Pwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msgid != 0) hash ^= Msgid.GetHashCode();
      if (Gsid != 0) hash ^= Gsid.GetHashCode();
      if (Pwd.Length != 0) hash ^= Pwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msgid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Msgid);
      }
      if (Gsid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Gsid);
      }
      if (Pwd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Pwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msgid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Msgid);
      }
      if (Gsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gsid);
      }
      if (Pwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AskRegiste other) {
      if (other == null) {
        return;
      }
      if (other.Msgid != 0) {
        Msgid = other.Msgid;
      }
      if (other.Gsid != 0) {
        Gsid = other.Gsid;
      }
      if (other.Pwd.Length != 0) {
        Pwd = other.Pwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            msgid_ = (global::GSToSS.MsgID) input.ReadEnum();
            break;
          }
          case 16: {
            Gsid = input.ReadInt32();
            break;
          }
          case 26: {
            Pwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReportGCMsg : pb::IMessage<ReportGCMsg> {
    private static readonly pb::MessageParser<ReportGCMsg> _parser = new pb::MessageParser<ReportGCMsg>(() => new ReportGCMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReportGCMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GSToSS.GSToSSReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportGCMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportGCMsg(ReportGCMsg other) : this() {
      mgsid_ = other.mgsid_;
      nsid_ = other.nsid_;
      othermsg_ = other.othermsg_;
      othermsgid_ = other.othermsgid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReportGCMsg Clone() {
      return new ReportGCMsg(this);
    }

    /// <summary>Field number for the "mgsid" field.</summary>
    public const int MgsidFieldNumber = 1;
    private global::GSToSS.MsgID mgsid_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GSToSS.MsgID Mgsid {
      get { return mgsid_; }
      set {
        mgsid_ = value;
      }
    }

    /// <summary>Field number for the "nsid" field.</summary>
    public const int NsidFieldNumber = 2;
    private int nsid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nsid {
      get { return nsid_; }
      set {
        nsid_ = value;
      }
    }

    /// <summary>Field number for the "othermsg" field.</summary>
    public const int OthermsgFieldNumber = 3;
    private string othermsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Othermsg {
      get { return othermsg_; }
      set {
        othermsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "othermsgid" field.</summary>
    public const int OthermsgidFieldNumber = 4;
    private int othermsgid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Othermsgid {
      get { return othermsgid_; }
      set {
        othermsgid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReportGCMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReportGCMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mgsid != other.Mgsid) return false;
      if (Nsid != other.Nsid) return false;
      if (Othermsg != other.Othermsg) return false;
      if (Othermsgid != other.Othermsgid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mgsid != 0) hash ^= Mgsid.GetHashCode();
      if (Nsid != 0) hash ^= Nsid.GetHashCode();
      if (Othermsg.Length != 0) hash ^= Othermsg.GetHashCode();
      if (Othermsgid != 0) hash ^= Othermsgid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mgsid != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mgsid);
      }
      if (Nsid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Nsid);
      }
      if (Othermsg.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Othermsg);
      }
      if (Othermsgid != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Othermsgid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mgsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mgsid);
      }
      if (Nsid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nsid);
      }
      if (Othermsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Othermsg);
      }
      if (Othermsgid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Othermsgid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReportGCMsg other) {
      if (other == null) {
        return;
      }
      if (other.Mgsid != 0) {
        Mgsid = other.Mgsid;
      }
      if (other.Nsid != 0) {
        Nsid = other.Nsid;
      }
      if (other.Othermsg.Length != 0) {
        Othermsg = other.Othermsg;
      }
      if (other.Othermsgid != 0) {
        Othermsgid = other.Othermsgid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            mgsid_ = (global::GSToSS.MsgID) input.ReadEnum();
            break;
          }
          case 16: {
            Nsid = input.ReadInt32();
            break;
          }
          case 26: {
            Othermsg = input.ReadString();
            break;
          }
          case 32: {
            Othermsgid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
